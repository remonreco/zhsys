<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cbice.distribute.core.db.data.TGoodsOrderMapper">
  <resultMap id="BaseResultMap" type="com.cbice.distribute.core.db.model.TGoodsOrder">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 09:35:43 CST 2015.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_identy" jdbcType="INTEGER" property="orderIdenty" />
    <result column="business_money" jdbcType="BIGINT" property="businessMoney" />
    <result column="agency_id" jdbcType="BIGINT" property="agencyId" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="order_time" jdbcType="TIMESTAMP" property="orderTime" />
    <result column="pay_state" jdbcType="INTEGER" property="payState" />
    <result column="issued_state" jdbcType="INTEGER" property="issuedState" />
    <result column="verify_rejection_reason" jdbcType="VARCHAR" property="verifyRejectionReason" />
    <result column="withdraw_goods_state" jdbcType="INTEGER" property="withdrawGoodsState" />
    <result column="withdraw_goods_reason" jdbcType="VARCHAR" property="withdrawGoodsReason" />
    <result column="withdraw_goods_exam_state" jdbcType="INTEGER" property="withdrawGoodsExamState" />
    <result column="withdraw_reject_reason" jdbcType="VARCHAR" property="withdrawRejectReason" />
    <result column="order_state" jdbcType="INTEGER" property="orderState" />
    <result column="sales_code" jdbcType="VARCHAR" property="salesCode" />
    <result column="return_goods_state" jdbcType="INTEGER" property="returnGoodsState" />
    <result column="return_goods_options" jdbcType="VARCHAR" property="returnGoodsOptions" />
    <result column="return_goods_reason" jdbcType="VARCHAR" property="returnGoodsReason" />
    <result column="return_goods_num" jdbcType="BIGINT" property="returnGoodsNum" />
    <result column="issued_date" jdbcType="TIMESTAMP" property="issuedDate" />
    <result column="batch_id" jdbcType="BIGINT" property="batchId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="higher_order_id" jdbcType="BIGINT" property="higherOrderId" />
    <result column="super_order_id" jdbcType="BIGINT" property="superOrderId" />
    <result column="goods_num" jdbcType="VARCHAR" property="goodsNum" />
    <result column="distribute_num" jdbcType="BIGINT" property="distributeNum" />
    <result column="member_return_goods" jdbcType="INTEGER" property="memberReturnGoods" />
    <result column="order_serial" jdbcType="VARCHAR" property="orderSerial" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
	<result column="t_user_id" jdbcType="BIGINT" property="tUserId" />
	<result column="sumd" jdbcType="NUMERIC" property="sumd" />
	<result column="summ" jdbcType="NUMERIC" property="summ" />
		<result column="dealer_name" jdbcType="VARCHAR" property="dealerName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 09:35:43 CST 2015.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 09:35:43 CST 2015.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 09:35:43 CST 2015.
    -->
    id, order_identy, business_money, agency_id, goods_name, order_time, pay_state, issued_state, 
    verify_rejection_reason, withdraw_goods_state, withdraw_goods_reason, withdraw_goods_exam_state, 
    withdraw_reject_reason, order_state, sales_code, return_goods_state, return_goods_options, 
    return_goods_reason, return_goods_num, issued_date, batch_id, user_id, higher_order_id, 
    super_order_id, goods_num, distribute_num, member_return_goods, order_serial
  </sql>
  <select id="selectByExample" parameterType="com.cbice.distribute.core.db.model.TGoodsOrderExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 09:35:43 CST 2015.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_goods_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 09:35:43 CST 2015.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_goods_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 09:35:43 CST 2015.
    -->
    delete from t_goods_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.cbice.distribute.core.db.model.TGoodsOrderExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 09:35:43 CST 2015.
    -->
    delete from t_goods_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cbice.distribute.core.db.model.TGoodsOrder">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 09:35:43 CST 2015.
    -->
    insert into t_goods_order (id, order_identy, business_money, 
      agency_id, goods_name, order_time, 
      pay_state, issued_state, verify_rejection_reason, 
      withdraw_goods_state, withdraw_goods_reason, 
      withdraw_goods_exam_state, withdraw_reject_reason, 
      order_state, sales_code, return_goods_state, 
      return_goods_options, return_goods_reason, 
      return_goods_num, issued_date, batch_id, 
      user_id, higher_order_id, super_order_id, 
      goods_num, distribute_num, member_return_goods, 
      order_serial)
    values (#{id,jdbcType=BIGINT}, #{orderIdenty,jdbcType=INTEGER}, #{businessMoney,jdbcType=BIGINT}, 
      #{agencyId,jdbcType=BIGINT}, #{goodsName,jdbcType=VARCHAR}, #{orderTime,jdbcType=TIMESTAMP}, 
      #{payState,jdbcType=INTEGER}, #{issuedState,jdbcType=INTEGER}, #{verifyRejectionReason,jdbcType=VARCHAR}, 
      #{withdrawGoodsState,jdbcType=INTEGER}, #{withdrawGoodsReason,jdbcType=VARCHAR}, 
      #{withdrawGoodsExamState,jdbcType=INTEGER}, #{withdrawRejectReason,jdbcType=VARCHAR}, 
      #{orderState,jdbcType=INTEGER}, #{salesCode,jdbcType=VARCHAR}, #{returnGoodsState,jdbcType=INTEGER}, 
      #{returnGoodsOptions,jdbcType=VARCHAR}, #{returnGoodsReason,jdbcType=VARCHAR}, 
      #{returnGoodsNum,jdbcType=BIGINT}, #{issuedDate,jdbcType=TIMESTAMP}, #{batchId,jdbcType=BIGINT}, 
      #{userId,jdbcType=BIGINT}, #{higherOrderId,jdbcType=BIGINT}, #{superOrderId,jdbcType=BIGINT}, 
      #{goodsNum,jdbcType=VARCHAR}, #{distributeNum,jdbcType=BIGINT}, #{memberReturnGoods,jdbcType=INTEGER}, 
      #{orderSerial,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cbice.distribute.core.db.model.TGoodsOrder">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 09:35:43 CST 2015.
    -->
    insert into t_goods_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderIdenty != null">
        order_identy,
      </if>
      <if test="businessMoney != null">
        business_money,
      </if>
      <if test="agencyId != null">
        agency_id,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="orderTime != null">
        order_time,
      </if>
      <if test="payState != null">
        pay_state,
      </if>
      <if test="issuedState != null">
        issued_state,
      </if>
      <if test="verifyRejectionReason != null">
        verify_rejection_reason,
      </if>
      <if test="withdrawGoodsState != null">
        withdraw_goods_state,
      </if>
      <if test="withdrawGoodsReason != null">
        withdraw_goods_reason,
      </if>
      <if test="withdrawGoodsExamState != null">
        withdraw_goods_exam_state,
      </if>
      <if test="withdrawRejectReason != null">
        withdraw_reject_reason,
      </if>
      <if test="orderState != null">
        order_state,
      </if>
      <if test="salesCode != null">
        sales_code,
      </if>
      <if test="returnGoodsState != null">
        return_goods_state,
      </if>
      <if test="returnGoodsOptions != null">
        return_goods_options,
      </if>
      <if test="returnGoodsReason != null">
        return_goods_reason,
      </if>
      <if test="returnGoodsNum != null">
        return_goods_num,
      </if>
      <if test="issuedDate != null">
        issued_date,
      </if>
      <if test="batchId != null">
        batch_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="higherOrderId != null">
        higher_order_id,
      </if>
      <if test="superOrderId != null">
        super_order_id,
      </if>
      <if test="goodsNum != null">
        goods_num,
      </if>
      <if test="distributeNum != null">
        distribute_num,
      </if>
      <if test="memberReturnGoods != null">
        member_return_goods,
      </if>
      <if test="orderSerial != null">
        order_serial,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderIdenty != null">
        #{orderIdenty,jdbcType=INTEGER},
      </if>
      <if test="businessMoney != null">
        #{businessMoney,jdbcType=BIGINT},
      </if>
      <if test="agencyId != null">
        #{agencyId,jdbcType=BIGINT},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null">
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payState != null">
        #{payState,jdbcType=INTEGER},
      </if>
      <if test="issuedState != null">
        #{issuedState,jdbcType=INTEGER},
      </if>
      <if test="verifyRejectionReason != null">
        #{verifyRejectionReason,jdbcType=VARCHAR},
      </if>
      <if test="withdrawGoodsState != null">
        #{withdrawGoodsState,jdbcType=INTEGER},
      </if>
      <if test="withdrawGoodsReason != null">
        #{withdrawGoodsReason,jdbcType=VARCHAR},
      </if>
      <if test="withdrawGoodsExamState != null">
        #{withdrawGoodsExamState,jdbcType=INTEGER},
      </if>
      <if test="withdrawRejectReason != null">
        #{withdrawRejectReason,jdbcType=VARCHAR},
      </if>
      <if test="orderState != null">
        #{orderState,jdbcType=INTEGER},
      </if>
      <if test="salesCode != null">
        #{salesCode,jdbcType=VARCHAR},
      </if>
      <if test="returnGoodsState != null">
        #{returnGoodsState,jdbcType=INTEGER},
      </if>
      <if test="returnGoodsOptions != null">
        #{returnGoodsOptions,jdbcType=VARCHAR},
      </if>
      <if test="returnGoodsReason != null">
        #{returnGoodsReason,jdbcType=VARCHAR},
      </if>
      <if test="returnGoodsNum != null">
        #{returnGoodsNum,jdbcType=BIGINT},
      </if>
      <if test="issuedDate != null">
        #{issuedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="batchId != null">
        #{batchId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="higherOrderId != null">
        #{higherOrderId,jdbcType=BIGINT},
      </if>
      <if test="superOrderId != null">
        #{superOrderId,jdbcType=BIGINT},
      </if>
      <if test="goodsNum != null">
        #{goodsNum,jdbcType=VARCHAR},
      </if>
      <if test="distributeNum != null">
        #{distributeNum,jdbcType=BIGINT},
      </if>
      <if test="memberReturnGoods != null">
        #{memberReturnGoods,jdbcType=INTEGER},
      </if>
      <if test="orderSerial != null">
        #{orderSerial,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cbice.distribute.core.db.model.TGoodsOrderExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 09:35:43 CST 2015.
    -->
    select count(*) from t_goods_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 09:35:43 CST 2015.
    -->
    update t_goods_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderIdenty != null">
        order_identy = #{record.orderIdenty,jdbcType=INTEGER},
      </if>
      <if test="record.businessMoney != null">
        business_money = #{record.businessMoney,jdbcType=BIGINT},
      </if>
      <if test="record.agencyId != null">
        agency_id = #{record.agencyId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.orderTime != null">
        order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payState != null">
        pay_state = #{record.payState,jdbcType=INTEGER},
      </if>
      <if test="record.issuedState != null">
        issued_state = #{record.issuedState,jdbcType=INTEGER},
      </if>
      <if test="record.verifyRejectionReason != null">
        verify_rejection_reason = #{record.verifyRejectionReason,jdbcType=VARCHAR},
      </if>
      <if test="record.withdrawGoodsState != null">
        withdraw_goods_state = #{record.withdrawGoodsState,jdbcType=INTEGER},
      </if>
      <if test="record.withdrawGoodsReason != null">
        withdraw_goods_reason = #{record.withdrawGoodsReason,jdbcType=VARCHAR},
      </if>
      <if test="record.withdrawGoodsExamState != null">
        withdraw_goods_exam_state = #{record.withdrawGoodsExamState,jdbcType=INTEGER},
      </if>
      <if test="record.withdrawRejectReason != null">
        withdraw_reject_reason = #{record.withdrawRejectReason,jdbcType=VARCHAR},
      </if>
      <if test="record.orderState != null">
        order_state = #{record.orderState,jdbcType=INTEGER},
      </if>
      <if test="record.salesCode != null">
        sales_code = #{record.salesCode,jdbcType=VARCHAR},
      </if>
      <if test="record.returnGoodsState != null">
        return_goods_state = #{record.returnGoodsState,jdbcType=INTEGER},
      </if>
      <if test="record.returnGoodsOptions != null">
        return_goods_options = #{record.returnGoodsOptions,jdbcType=VARCHAR},
      </if>
      <if test="record.returnGoodsReason != null">
        return_goods_reason = #{record.returnGoodsReason,jdbcType=VARCHAR},
      </if>
      <if test="record.returnGoodsNum != null">
        return_goods_num = #{record.returnGoodsNum,jdbcType=BIGINT},
      </if>
      <if test="record.issuedDate != null">
        issued_date = #{record.issuedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.batchId != null">
        batch_id = #{record.batchId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.higherOrderId != null">
        higher_order_id = #{record.higherOrderId,jdbcType=BIGINT},
      </if>
      <if test="record.superOrderId != null">
        super_order_id = #{record.superOrderId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsNum != null">
        goods_num = #{record.goodsNum,jdbcType=VARCHAR},
      </if>
      <if test="record.distributeNum != null">
        distribute_num = #{record.distributeNum,jdbcType=BIGINT},
      </if>
      <if test="record.memberReturnGoods != null">
        member_return_goods = #{record.memberReturnGoods,jdbcType=INTEGER},
      </if>
      <if test="record.orderSerial != null">
        order_serial = #{record.orderSerial,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 09:35:43 CST 2015.
    -->
    update t_goods_order
    set id = #{record.id,jdbcType=BIGINT},
      order_identy = #{record.orderIdenty,jdbcType=INTEGER},
      business_money = #{record.businessMoney,jdbcType=BIGINT},
      agency_id = #{record.agencyId,jdbcType=BIGINT},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      pay_state = #{record.payState,jdbcType=INTEGER},
      issued_state = #{record.issuedState,jdbcType=INTEGER},
      verify_rejection_reason = #{record.verifyRejectionReason,jdbcType=VARCHAR},
      withdraw_goods_state = #{record.withdrawGoodsState,jdbcType=INTEGER},
      withdraw_goods_reason = #{record.withdrawGoodsReason,jdbcType=VARCHAR},
      withdraw_goods_exam_state = #{record.withdrawGoodsExamState,jdbcType=INTEGER},
      withdraw_reject_reason = #{record.withdrawRejectReason,jdbcType=VARCHAR},
      order_state = #{record.orderState,jdbcType=INTEGER},
      sales_code = #{record.salesCode,jdbcType=VARCHAR},
      return_goods_state = #{record.returnGoodsState,jdbcType=INTEGER},
      return_goods_options = #{record.returnGoodsOptions,jdbcType=VARCHAR},
      return_goods_reason = #{record.returnGoodsReason,jdbcType=VARCHAR},
      return_goods_num = #{record.returnGoodsNum,jdbcType=BIGINT},
      issued_date = #{record.issuedDate,jdbcType=TIMESTAMP},
      batch_id = #{record.batchId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      higher_order_id = #{record.higherOrderId,jdbcType=BIGINT},
      super_order_id = #{record.superOrderId,jdbcType=BIGINT},
      goods_num = #{record.goodsNum,jdbcType=VARCHAR},
      distribute_num = #{record.distributeNum,jdbcType=BIGINT},
      member_return_goods = #{record.memberReturnGoods,jdbcType=INTEGER},
      order_serial = #{record.orderSerial,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cbice.distribute.core.db.model.TGoodsOrder">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 09:35:43 CST 2015.
    -->
    update t_goods_order
    <set>
      <if test="orderIdenty != null">
        order_identy = #{orderIdenty,jdbcType=INTEGER},
      </if>
      <if test="businessMoney != null">
        business_money = #{businessMoney,jdbcType=BIGINT},
      </if>
      <if test="agencyId != null">
        agency_id = #{agencyId,jdbcType=BIGINT},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null">
        order_time = #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payState != null">
        pay_state = #{payState,jdbcType=INTEGER},
      </if>
      <if test="issuedState != null">
        issued_state = #{issuedState,jdbcType=INTEGER},
      </if>
      <if test="verifyRejectionReason != null">
        verify_rejection_reason = #{verifyRejectionReason,jdbcType=VARCHAR},
      </if>
      <if test="withdrawGoodsState != null">
        withdraw_goods_state = #{withdrawGoodsState,jdbcType=INTEGER},
      </if>
      <if test="withdrawGoodsReason != null">
        withdraw_goods_reason = #{withdrawGoodsReason,jdbcType=VARCHAR},
      </if>
      <if test="withdrawGoodsExamState != null">
        withdraw_goods_exam_state = #{withdrawGoodsExamState,jdbcType=INTEGER},
      </if>
      <if test="withdrawRejectReason != null">
        withdraw_reject_reason = #{withdrawRejectReason,jdbcType=VARCHAR},
      </if>
      <if test="orderState != null">
        order_state = #{orderState,jdbcType=INTEGER},
      </if>
      <if test="salesCode != null">
        sales_code = #{salesCode,jdbcType=VARCHAR},
      </if>
      <if test="returnGoodsState != null">
        return_goods_state = #{returnGoodsState,jdbcType=INTEGER},
      </if>
      <if test="returnGoodsOptions != null">
        return_goods_options = #{returnGoodsOptions,jdbcType=VARCHAR},
      </if>
      <if test="returnGoodsReason != null">
        return_goods_reason = #{returnGoodsReason,jdbcType=VARCHAR},
      </if>
      <if test="returnGoodsNum != null">
        return_goods_num = #{returnGoodsNum,jdbcType=BIGINT},
      </if>
      <if test="issuedDate != null">
        issued_date = #{issuedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="batchId != null">
        batch_id = #{batchId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="higherOrderId != null">
        higher_order_id = #{higherOrderId,jdbcType=BIGINT},
      </if>
      <if test="superOrderId != null">
        super_order_id = #{superOrderId,jdbcType=BIGINT},
      </if>
      <if test="goodsNum != null">
        goods_num = #{goodsNum,jdbcType=VARCHAR},
      </if>
      <if test="distributeNum != null">
        distribute_num = #{distributeNum,jdbcType=BIGINT},
      </if>
      <if test="memberReturnGoods != null">
        member_return_goods = #{memberReturnGoods,jdbcType=INTEGER},
      </if>
      <if test="orderSerial != null">
        order_serial = #{orderSerial,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cbice.distribute.core.db.model.TGoodsOrder">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 23 09:35:43 CST 2015.
    -->
    update t_goods_order
    set order_identy = #{orderIdenty,jdbcType=INTEGER},
      business_money = #{businessMoney,jdbcType=BIGINT},
      agency_id = #{agencyId,jdbcType=BIGINT},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      order_time = #{orderTime,jdbcType=TIMESTAMP},
      pay_state = #{payState,jdbcType=INTEGER},
      issued_state = #{issuedState,jdbcType=INTEGER},
      verify_rejection_reason = #{verifyRejectionReason,jdbcType=VARCHAR},
      withdraw_goods_state = #{withdrawGoodsState,jdbcType=INTEGER},
      withdraw_goods_reason = #{withdrawGoodsReason,jdbcType=VARCHAR},
      withdraw_goods_exam_state = #{withdrawGoodsExamState,jdbcType=INTEGER},
      withdraw_reject_reason = #{withdrawRejectReason,jdbcType=VARCHAR},
      order_state = #{orderState,jdbcType=INTEGER},
      sales_code = #{salesCode,jdbcType=VARCHAR},
      return_goods_state = #{returnGoodsState,jdbcType=INTEGER},
      return_goods_options = #{returnGoodsOptions,jdbcType=VARCHAR},
      return_goods_reason = #{returnGoodsReason,jdbcType=VARCHAR},
      return_goods_num = #{returnGoodsNum,jdbcType=BIGINT},
      issued_date = #{issuedDate,jdbcType=TIMESTAMP},
      batch_id = #{batchId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      higher_order_id = #{higherOrderId,jdbcType=BIGINT},
      super_order_id = #{superOrderId,jdbcType=BIGINT},
      goods_num = #{goodsNum,jdbcType=VARCHAR},
      distribute_num = #{distributeNum,jdbcType=BIGINT},
      member_return_goods = #{memberReturnGoods,jdbcType=INTEGER},
      order_serial = #{orderSerial,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>


	<select id="selectBy" parameterType="map" resultType="java.util.HashMap">
		select a.* from (
		select a.*,t.dealer_name from(
		select agency_id,id,user_id,goods_name,goods_num,distribute_num,order_state from t_goods_order 
		where order_identy='0' and (member_return_goods !=0 or member_return_goods is null)  and (withdraw_goods_state is null or withdraw_goods_state = 0) and order_state!=3
		<if test="id != null and id !=''">
			and id =#{id}
		</if>
		<if test="goodsname != null and goodsname !=''">
			and goods_name like concat('%', #{goodsname}, '%')
		</if>
		<if test="goodsnum != null and goodsnum !=''">
			and goods_num like concat('%', #{goodsnum}, '%')
		</if>
		<if test="higherorderid != null and higherorderid !=''">
			and higher_order_id like concat('%', #{higherorderid}, '%')
		</if>
		<if test="user_id != null">
			and agency_id =#{user_id}
		</if>
		ORDER BY id
		) a left join t_agency t on t.id=a.agency_id		
		)a where 1=1 
		 <if test="agencyname != null and agencyname !=''">
			and a.dealer_name like concat('%', #{agencyname}, '%')
		</if>
		limit #{limit} offset #{offset}
	</select>
	<select id="countSelectBy" parameterType="map" resultType="int">
		select count(*) from (
		select a.*,t.dealer_name from(
		select * from t_goods_order 
		where order_identy='0' and (member_return_goods !=0 or member_return_goods is null) and (withdraw_goods_state is null or withdraw_goods_state = 0) and order_state!=3
		<if test="id != null and id !=''">
			and id =#{id}
		</if>
		<if test="goodsname != null and goodsname !=''">
			and goods_name like concat('%', #{goodsname}, '%')
		</if>
		<if test="goodsnum != null and goodsnum !=''">
			and goods_num like concat('%', #{goodsnum}, '%')
		</if>
		<if test="higherorderid != null and higherorderid !=''">
			and higher_order_id like concat('%', #{higherOrderId}, '%')
		</if>
		<if test="user_id != null">
			and agency_id =#{user_id}
		</if>
		ORDER BY id
		)a left join t_agency t on t.id=a.agency_id)a where 1=1 
		<if test="agencyname != null and agencyname !=''">
			and a.dealer_name like concat('%', #{agencyname}, '%')
		</if>
	</select>
	<select id="selectReturnGoodsList" parameterType="map" resultType="java.util.HashMap">
		select a.*,
			 case 	when u.user_identy =0 then u.user_name
         			when u.user_identy =2 then u.dealer_name
   					end  as dealer_name,
		u.agency_id,u.user_identy from(
		select distinct 

id,agency_id,user_id,goods_name,goods_num,distribute_num,return_goods_reason,return_goods_state,return_goods_options 

from t_goods_order 
		where order_identy='1'   and agency_id =#{agencyId}
		<if test="goodsname != null and goodsname !=''">
			and goods_name like concat('%', #{goodsname}, '%')
		</if>
		<if test="goodsnum != null and goodsnum !=''">
			and goods_num like concat('%', #{goodsnum}, '%')
		</if>

		<if test="return_goods_state != null and return_goods_state !=''">
			and return_goods_state = #{returnGoodsState}
		</if>
		)a left join v_user_agency u on u.id=a.user_id
		where 1=1
		<if test="dealerName != null and dealerName !=''">
			and u.dealer_name like concat('%', #{dealerName}, '%')
		</if>
	    <if test="limit != null">limit #{limit}</if>
        <if test="offset != null">offset #{offset}</if>
	</select>
	<select id="selectReturnGoodsListCount" parameterType="map" resultType="int">
		select count(1) from (
		select a.*,u.dealer_name,u.agency_id from(
		select * from t_goods_order where order_identy='1'    and agency_id =#{agencyId}
		<if test="goodsname != null and goodsname !=''">
			and goods_name like concat('%', #{goodsname}, '%')
		</if>
		<if test="goodsnum != null and goodsnum !=''">
			and goods_num like concat('%', #{goodsnum}, '%')
		</if>
		<if test="return_goods_state != null and return_goods_state !=''">
			and return_goods_state = #{returnGoodsState}
		</if>
		)a left join v_user_agency u on u.id=a.user_id
		where 1=1
		<if test="dealerName != null and dealerName !=''">
			and u.dealer_name like concat('%', #{dealerName}, '%')
		</if>
		) a
	</select>
	<select id="selectDealerNameById" parameterType="long" resultType="java.lang.String">
		select dealer_name from t_agency where id=#{agencyId}
	</select>
	<select id="selectUserNameById" parameterType="long" resultType="java.lang.String">
		select user_name from t_user where id=#{userId}
	</select>
	<select id="selectUseridentyById" parameterType="long" resultType="long">
		select user_identy from  v_user_agency where id=#{userId}
	</select>
	<select id="selectGoodsBatchById" parameterType="long" resultMap="BaseResultMap">
		select * from t_goods_batch a inner join (select batch_id
		,sum(distribute_num) as sumd ,sum(business_money) as summ from
		t_goods_order
		where issued_state='1' and order_state='1'
		<if test="batchId != null and batchId !=''">
			and batch_id=#{batchId}
		</if>
		group by batch_id
		) b on a.id =b.batch_id
	</select>
	<select id="selectGoodsOrderByBatchid" parameterType="long" resultMap="BaseResultMap">
		select * from t_goods_order
		where 1=1
		<if test="batchId != null and batchId !=''">
			and batch_id=#{batchId}
		</if>
	</select>
	
	<select id="selectReturnGoodsOrderByBatchid" parameterType="long" resultMap="BaseResultMap">
		select * from t_goods_order
		where goods_num in  (select goods_num from t_goods_batch where id =#{batchId} ) and  return_goods_state =1
	</select>
	
	
	<select id="selectReturnGoodsHis" parameterType="map" resultMap="BaseResultMap">
						SELECT
				    *
				FROM
				    t_goods_order
				WHERE
				agency_id =#{id}
				AND return_goods_state =1
				<if test="goods_name != null and goods_name !=''">
				AND goods_name like concat('%', #{goods_name}, '%')
				</if>
				<if test="goods_num != null and goods_num !=''">
				AND goods_num like concat('%', #{goods_num}, '%')
				</if>
				order by  issued_date
				
	<if test="limit != null">limit #{limit}</if>
    <if test="offset != null">offset #{offset}</if> 
		
	</select>
	
	<select id="selectReturnGoodsHisCount" parameterType="map" resultType="int">
				select count(1) from (
				SELECT
				    *
				FROM
				    t_goods_order
				WHERE
				   agency_id =#{id}
				AND return_goods_state =1
				<if test="goods_name != null and goods_name !=''">
				AND goods_name like concat('%', #{goods_name}, '%')
				</if>
				<if test="goods_num != null and goods_num !=''">
				AND goods_num like concat('%', #{goods_num}, '%')
				</if>
				) c
		
	</select>
	<select id="selectToSendBuyUserid" parameterType="map" resultMap="BaseResultMap">
		select * from t_goods_order where goods_num not in (
		select goods_num from t_goods_batch where t_user_id=#{userId}
		) and user_id=#{agencyId} and issued_state=1
			and order_state in('1','3','4')
		<if test="goodsNum != null and goodsNum !=''">
			and goods_num=#{goodsNum}
		</if>
		<if test="goodsName != null and goodsName !=''">
			and goods_name=#{goodsName}
		</if>
		<if test="startDate != null and startDate !=''">
			and issued_date &gt;= #{startDate}
		</if>
		<if test="endDate != null and endDate !=''">
			and issued_date &lt;= #{endDate}
		</if>
		
		order by issued_date desc
		limit #{limit} offset #{offset}

	</select>


	<select id="countSelectToSendBuyUserid" parameterType="map" resultType="int">
		select count(1) from t_goods_order where goods_num not in (
		select goods_num from t_goods_batch where t_user_id=#{userId}
		) and user_id=#{agencyId} and issued_state=1
		and order_state in('1','3','4')
		<if test="goodsNum != null and goodsNum !=''">
			and goods_num=#{goodsNum}
		</if>
		<if test="goodsName != null and goodsName !=''">
			and goods_name=#{goodsName}
		</if>
		<if test="startDate != null and startDate !=''">
			and issued_date &gt;= #{startDate}
		</if>
		<if test="endDate != null and endDate !=''">
			and issued_date &lt;= #{endDate}
		</if>
	</select>
	<resultMap id="BaseResultMap2" type="com.cbice.distribute.core.db.model.TGoodsOrder">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="order_identy" jdbcType="INTEGER" property="orderIdenty" />
		<result column="business_money" jdbcType="BIGINT" property="businessMoney" />
		<result column="agency_id" jdbcType="BIGINT" property="agencyId" />
		<result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
		<result column="order_time" jdbcType="TIMESTAMP" property="orderTime" />
		<result column="pay_state" jdbcType="INTEGER" property="payState" />
		<result column="issued_state" jdbcType="INTEGER" property="issuedState" />
		<result column="verify_rejection_reason" jdbcType="VARCHAR" property="verifyRejectionReason" />
		<result column="withdraw_goods_state" jdbcType="INTEGER" property="withdrawGoodsState" />
		<result column="withdraw_goods_reason" jdbcType="VARCHAR" property="withdrawGoodsReason" />
		<result column="withdraw_goods_exam_state" jdbcType="INTEGER" property="withdrawGoodsExamState" />
		<result column="withdraw_reject_reason" jdbcType="VARCHAR" property="withdrawRejectReason" />
		<result column="order_state" jdbcType="INTEGER" property="orderState" />
		<result column="sales_code" jdbcType="VARCHAR" property="salesCode" />
		<result column="return_goods_state" jdbcType="INTEGER" property="returnGoodsState" />
		<result column="return_goods_options" jdbcType="VARCHAR" property="returnGoodsOptions" />
		<result column="return_goods_reason" jdbcType="VARCHAR" property="returnGoodsReason" />
		<result column="return_goods_num" jdbcType="BIGINT" property="returnGoodsNum" />
		<result column="issued_date" jdbcType="TIMESTAMP" property="issuedDate" />
		<result column="batch_id" jdbcType="BIGINT" property="batchId" />
		<result column="user_id" jdbcType="BIGINT" property="userId" />
		<result column="higher_order_id" jdbcType="BIGINT" property="higherOrderId" />
		<result column="super_order_id" jdbcType="BIGINT" property="superOrderId" />
		<result column="goods_num" jdbcType="VARCHAR" property="goodsNum" />
		<result column="distribute_num" jdbcType="BIGINT" property="distributeNum" />
		<result column="tel" jdbcType="VARCHAR" property="tel" />
		<result column="user_name" jdbcType="VARCHAR" property="userName" />
		<result column="assets_account" jdbcType="VARCHAR" property="assetsAccount" />
		<result column="account_status" jdbcType="INTEGER" property="accountStatus" />
		 <result column="order_serial" jdbcType="VARCHAR" property="orderSerial" />
	</resultMap>
	<select id="outSaleCode" parameterType="map" resultMap="BaseResultMap2">
	select
		a.*,b.user_name,b.tel,b.assets_account from t_goods_order a,t_user b,t_goods_batch c where
		a.user_id=b.id and a.batch_id=c.id
		and b.user_identy='0' and a.agency_id=#{userId}
		and a.goods_num=#{goodsNum}
		and a.goods_name=#{goodsName}
		and a.order_state='1'
        and c.id=#{id}
	</select>
	<!-- ��½���ϵȼ�ϵͳ -->
	<select id="selectUserMemberbyOrder" parameterType="map" resultMap="BaseResultMap2">
		select a.*,b.assets_account,b.account_status from t_goods_order a,t_user b
		where b.id=a.user_id
		and b.assets_account=#{assetsAccount}
		and a.sales_code=#{salesCode}
	</select>
	<!-- <select id="selectUserMerberbyAccount" parameterType="java.lang.String" 
		resultMap="BaseResultMap2"> -->
	<!-- select a.*,b.assets_account,b.accountStatus from t_goods_order a,t_user 
		b -->
	<!-- where b.id=a.user_id -->
	<!-- and a.id=#{id} -->
	<!-- </select> -->

	<select id="selectOrderbyUserIdgoodsNameGoodsNum" parameterType="map" resultMap="BaseResultMap">
      select g.*,k.* from (
select a.* from t_user a left join t_agency b on a.agency_id=b.id ) g,(
select c.* from t_goods_order c where c.goods_num=#{t_goods_num}  and c.goods_name=#{goods_name} and c.order_identy=0) k
where g.id=#{userId} and k.user_id=g.agency_id
	</select>
	
	<select id="selectHistoryGoodsOrderBy" parameterType="map" resultMap="BaseResultMap">
  select * from t_goods_batch a inner join (
  	select batch_id ,sum(distribute_num) as sumd ,sum(business_money) as summ from t_goods_order 
 	 where 1=1
        <if test="batchid != null and batchid !=''">
  	and batch_id=#{batchid} 
      </if>
      <if test="goodsname != null and goodsname !=''">
 	 and goods_name like concat('%', #{goodsname}, '%')
      </if>
      <if test="ordertimestart != null and ordertimestart !=''">
 	 and issued_date &gt; #{ordertimestart}
      </if> 
      <if test="ordertimeend != null and ordertimestart !=''">
 	 and issued_date &lt; #{ordertimeend}
      </if>
     
    group by batch_id
    ) b on a.id =b.batch_id
     <if test="userId != null">
 	 where a.t_user_id = #{userId}
      </if>
      order by a.creat_time  desc
  limit #{limit} offset #{offset}
</select>

<select id="countSelectHistoryGoodsOrderBy" parameterType="map" resultType="int">
  select count(1) from (  select * from t_goods_batch a inner join (
   select batch_id ,sum(distribute_num) as sumd ,sum(business_money) as summ from t_goods_order 
   where 1=1
        <if test="batchid != null and batchid !=''">
   and batch_id=#{batchid} 
      </if>
      <if test="goodsname != null and goodsname !=''">
   and goods_name like concat('%', #{goodsname}, '%')
      </if>
      <if test="ordertimestart != null and ordertimestart !=''">
   and issued_date &gt; #{ordertimestart}
       </if>
      <if test="ordertimeend != null and ordertimeend !=''">
   and issued_date &lt; #{ordertimeend}
      </if>
    group by batch_id
    )b on a.id =b.batch_id  
    	  <if test="userId != null ">
 	 		where a.t_user_id = #{userId}
      	 </if>
      )c
  </select>
  
  
  
  
  <select id="selectMemberHistoryGoodsOrderBy" parameterType="map" resultMap="BaseResultMap">
	select a.* from t_goods_order a inner join t_user b on  a.user_id =b.id
		where  1=1
        <if test="assetsAccount != null and assetsAccount !=''">
  		 and b.assets_account =#{assetsAccount} 
      </if>
      
      <if test="startDate != null and startDate !=''">
 	 	and a.issued_date &gt; #{startDate}
      </if> 
      <if test="endDate != null and endDate !=''">
 	 and a.issued_date &lt; #{endDate}
      </if>
     order by a.issued_date  desc
  limit #{limit} offset #{offset}
</select>

<select id="countSelectMemberHistoryGoodsOrderBy" parameterType="map" resultType="int">
  select count(1) from ( select a.* from t_goods_order a inner join t_user b on  a.user_id =b.id
		where  1=1
        <if test="assetsAccount != null and assetsAccount !=''">
  		and b.assets_account =#{assetsAccount} 
      </if>
      
      <if test="startDate != null and startDate !=''">
 	 	and a.issued_date &gt; #{startDate}
      </if> 
      <if test="endDate != null and endDate !=''">
 	 and a.issued_date &lt; #{endDate}
      </if>
      )c
  </select>
  
  
  
  
  
  
  <select id="selectHistoryGoodsOrder" parameterType="map" resultMap="BaseResultMap">
	SELECT
	a.order_time,
	a.pay_state,
	a.order_identy,
	a.goods_num,
	tg.goods_name,
	c.dealer_name as agencyName,
	tg.goods_price as singlePrice,
	a.distribute_num,
	tg.goods_price*a.distribute_num AS totalAmt
	FROM
	t_goods_order a
	INNER JOIN t_user b
	ON
	a.user_id = b.id
	INNER JOIN t_agency ta
	ON
	b.agency_id=ta.id
	LEFT JOIN t_goods tg
	ON
	tg.goods_num=a.goods_num
	left join t_agency c
	on
	a.agency_id =c.id
	<if test="begintime!=null and begintime !=''">
	 and a.order_time &gt; #{begintime}
		<!-- <![CDATA[
			  and DATE_FORMAT(a.order_time, '%Y-%m-%d') >=  DATE_FORMAT(#{begintime}, '%Y-%m-%d')
		]]> -->
	</if>
	<if test="endtime!=null and endtime !=''">
	and a.order_time &lt; #{endtime}
		<!-- <![CDATA[
			  and DATE_FORMAT(a.order_time, '%Y-%m-%d') <=  DATE_FORMAT(#{endtime}, '%Y-%m-%d')
		]]> -->
	</if>
	
	<if test="assetsAccount != null and assetsAccount !=''">
		where assets_account = #{assetsAccount}
	</if>
	<if test="limit != null">limit #{limit}</if>
    <if test="start != null">offset #{start}</if>
  </select>
  
 <select id="selectHistoryGoodsOrderCount" parameterType="map" resultType="java.util.Map">
	SELECT  count(*)  count,sum(a.distribute_num) AS distribute_num,
	sum(tg.goods_price*a.distribute_num) AS totalAmt
	FROM
	t_goods_order a
	INNER JOIN t_user b
	ON
	a.user_id = b.id
	INNER JOIN t_agency ta
	ON
	b.agency_id=ta.id
	LEFT JOIN t_goods tg
	ON
	tg.goods_num=a.goods_num
	left join t_agency c
	on
	a.agency_id =c.id
	<if test="begintime!=null and begintime !=''">
	 and a.order_time &gt; #{begintime}
		<!-- <![CDATA[
			  and DATE_FORMAT(a.order_time, '%Y-%m-%d') >=  DATE_FORMAT(#{begintime}, '%Y-%m-%d')
		]]> -->
	</if>
	<if test="endtime!=null and endtime !=''">
	and a.order_time &lt; #{endtime}
		<!-- <![CDATA[
			  and DATE_FORMAT(a.order_time, '%Y-%m-%d') <=  DATE_FORMAT(#{endtime}, '%Y-%m-%d')
		]]> -->
	</if>
	
	<if test="assetsAccount != null and assetsAccount !=''">
		where assets_account = #{assetsAccount}
	</if>
  </select>
  <select id="selectOrderbySerial"  parameterType="map"   resultMap="BaseResultMap">
  	select * from t_goods_order  where  1=1
   	<if test="order_serial != null and order_serial !=''">
		 and  order_serial =#{order_serial}
	</if>
  
  </select>
  
  <select id="TranctionOut" parameterType="map" resultMap="BaseResultMap">
  
		  select ha.*,ga.dealer_name from(
		select * from t_goods_order k,(
		  select id from t_user where user_identy='0' and agency_id in(
		 select a.id from t_agency a where a.lft &lt;#{agenylft} and a.rgt&gt;#{agenyrgt}
		union select #{t_user_id} as id
		 )
		 ) m
		 where k.user_id=m.id and k.goods_num=#{goodsNum} and batch_id=#{id}  and k.order_identy=0 and k.order_state in(1,3)
		)ha ,t_agency ga where ha.agency_id=ga.id
  </select>
  
</mapper>