<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cbice.distribute.core.db.data.TGoodsBatchMapper">
  <resultMap id="BaseResultMap" type="com.cbice.distribute.core.db.model.TGoodsBatch">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 10 18:34:10 CST 2015.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="goods_num" jdbcType="VARCHAR" property="goodsNum" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
    <result column="states" jdbcType="INTEGER" property="states" />
    <result column="t_user_id" jdbcType="BIGINT" property="tUserId" />
    <result column="t_higer_user_id" jdbcType="BIGINT" property="tHigerUserId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 10 18:34:10 CST 2015.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 10 18:34:10 CST 2015.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 10 18:34:10 CST 2015.
    -->
    id, goods_num, goods_name, creat_time, states, t_user_id, t_higer_user_id
  </sql>
  <select id="selectByExample" parameterType="com.cbice.distribute.core.db.model.TGoodsBatchExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 10 18:34:10 CST 2015.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_goods_batch
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 10 18:34:10 CST 2015.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_goods_batch
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 10 18:34:10 CST 2015.
    -->
    delete from t_goods_batch
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.cbice.distribute.core.db.model.TGoodsBatchExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 10 18:34:10 CST 2015.
    -->
    delete from t_goods_batch
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cbice.distribute.core.db.model.TGoodsBatch">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 10 18:34:10 CST 2015.
    -->
    insert into t_goods_batch (id, goods_num, goods_name, 
      creat_time, states, t_user_id, 
      t_higer_user_id)
    values (#{id,jdbcType=BIGINT}, #{goodsNum,jdbcType=VARCHAR}, #{goodsName,jdbcType=VARCHAR}, 
      #{creatTime,jdbcType=TIMESTAMP}, #{states,jdbcType=INTEGER}, #{tUserId,jdbcType=BIGINT}, 
      #{tHigerUserId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.cbice.distribute.core.db.model.TGoodsBatch">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 10 18:34:10 CST 2015.
    -->
    insert into t_goods_batch
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="goodsNum != null">
        goods_num,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="creatTime != null">
        creat_time,
      </if>
      <if test="states != null">
        states,
      </if>
      <if test="tUserId != null">
        t_user_id,
      </if>
      <if test="tHigerUserId != null">
        t_higer_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="goodsNum != null">
        #{goodsNum,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="creatTime != null">
        #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="states != null">
        #{states,jdbcType=INTEGER},
      </if>
      <if test="tUserId != null">
        #{tUserId,jdbcType=BIGINT},
      </if>
      <if test="tHigerUserId != null">
        #{tHigerUserId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cbice.distribute.core.db.model.TGoodsBatchExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 10 18:34:10 CST 2015.
    -->
    select count(*) from t_goods_batch
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 10 18:34:10 CST 2015.
    -->
    update t_goods_batch
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.goodsNum != null">
        goods_num = #{record.goodsNum,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.creatTime != null">
        creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.states != null">
        states = #{record.states,jdbcType=INTEGER},
      </if>
      <if test="record.tUserId != null">
        t_user_id = #{record.tUserId,jdbcType=BIGINT},
      </if>
      <if test="record.tHigerUserId != null">
        t_higer_user_id = #{record.tHigerUserId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 10 18:34:10 CST 2015.
    -->
    update t_goods_batch
    set id = #{record.id,jdbcType=BIGINT},
      goods_num = #{record.goodsNum,jdbcType=VARCHAR},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      states = #{record.states,jdbcType=INTEGER},
      t_user_id = #{record.tUserId,jdbcType=BIGINT},
      t_higer_user_id = #{record.tHigerUserId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cbice.distribute.core.db.model.TGoodsBatch">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 10 18:34:10 CST 2015.
    -->
    update t_goods_batch
    <set>
      <if test="goodsNum != null">
        goods_num = #{goodsNum,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="creatTime != null">
        creat_time = #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="states != null">
        states = #{states,jdbcType=INTEGER},
      </if>
      <if test="tUserId != null">
        t_user_id = #{tUserId,jdbcType=BIGINT},
      </if>
      <if test="tHigerUserId != null">
        t_higer_user_id = #{tHigerUserId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cbice.distribute.core.db.model.TGoodsBatch">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 10 18:34:10 CST 2015.
    -->
    update t_goods_batch
    set goods_num = #{goodsNum,jdbcType=VARCHAR},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      creat_time = #{creatTime,jdbcType=TIMESTAMP},
      states = #{states,jdbcType=INTEGER},
      t_user_id = #{tUserId,jdbcType=BIGINT},
      t_higer_user_id = #{tHigerUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
   <select id="selectByUserId" parameterType="map" resultMap="BaseResultMap">
  select * from  t_goods_batch d WHERE 1=1 and
	<if test="id !=null">d.id = #{id}  and </if>
	<if test="goodsName !=null and goodsName!=''">d.goods_name = #{goodsName}  and </if>
	 d.id IN
    (
        SELECT
            id
        FROM
            (
                SELECT
                    COUNT(a.id) AS num,
                    b.id
                FROM
                    t_goods_order a
                INNER JOIN t_goods_batch b
                ON
                    a.batch_id =b.id
                WHERE
                     <if test="userId !=null">b.t_higer_user_id = #{userId}</if>  
                    and a.order_state =0
                GROUP BY
                    b.id
            )  c
    )
    order by id desc
     <if test="limit != null">limit #{limit}</if>
    <if test="offset != null">offset #{offset}</if>
</select>
  
   <select id="countSelectDealer" parameterType="map" resultType="int">
   select count (1) from (
        select * from  t_goods_batch d WHERE 1=1 and
    <if test="id !=null">d.id = #{id}  and </if>
	<if test="goodsName !=null and goodsName!=''">d.goods_name = #{goodsName}  and </if>
	 d.id IN
    (
        SELECT
            id
        FROM
            (
                SELECT
                    COUNT(a.id) AS num,
                    b.id
                FROM
                    t_goods_order a
                INNER JOIN t_goods_batch b
                ON
                    a.batch_id =b.id
                WHERE
                     <if test="userId !=null">b.t_higer_user_id = #{userId}</if>   
                    and a.order_state =0
                GROUP BY
                    b.id
            )
            c
    )
    )e
    
    
  </select>
  
  
  <select id="selectTrancationReport" parameterType="map" resultMap="BaseResultMap2">
  
  select distinct a.* from t_goods_order b,
     ( select a.*,b.goods_price from t_goods_batch a ,t_goods b
   where a.goods_num=b.goods_num and a.goods_name=b.goods_name
    ) a,t_user c  where 1=1 and a.id=b.batch_id and a.t_user_id=#{tUserId} and b.order_state in(1,3)
     <if test="id != null and id !=''">
  and a.id=#{id}
      </if>
    <if test="goodsNum != null and goodsNum !=''">
  and a.goods_num like concat(concat('%', #{goodsNum}), '%')
      </if>
      <if test="goodsName != null and goodsName !=''">
  and a.goods_name like concat(concat('%', #{goodsName}), '%')
      </if>
      order by a.id desc
    <if test="limit != null">limit #{limit}</if>
    <if test="start != null">offset #{start}</if>  
  </select>
  
  <select id="countSelectTrancationReport" parameterType="map" resultType="int">
  select count(1) from (
   select distinct a.* from t_goods_order b,
     ( select a.*,b.goods_price from t_goods_batch a ,t_goods b
   where a.goods_num=b.goods_num and a.goods_name=b.goods_name
    ) a  where 1=1 and a.id=b.batch_id and a.t_user_id=#{tUserId}  and b.order_state in(1,3)
     <if test="id != null and id !=''">
  and a.id=#{id}
      </if>
     <if test="goodsNum != null and goodsNum !=''">
  and a.goods_num like concat(concat('%', #{goodsNum}), '%')
      </if>
      <if test="goodsName != null and goodsName !=''">
  and a.goods_name like concat(concat('%', #{goodsName}), '%')
      </if>
  ) a
  </select>
  
  
  <select id="outTrancationReport" parameterType="map" resultMap="BaseResultMap2">
	select g.*,k.* from t_goods_batch g,(
select b.user_id,b.goods_id,a.goods_num,a.goods_name,b.goods_num as distribute_num
from t_remainder_goods b,t_goods a 
where b.goods_id=a.id) k
where  g.goods_num=k.goods_num and g.goods_name=k.goods_name
 and k.user_id in( select id from t_user where user_identy='0' and agency_id in(
 select a.id from t_agency a where a.lft &lt;#{agenylft} and a.rgt&gt;#{agenyrgt}
 )
 )
 and g.goods_num=#{goodsNum} and g.t_user_id=#{t_user_id}
  </select>
  <select id="selectGoodsByGoodsnum" parameterType="string" resultMap="BaseResultMap">
  	select * from t_goods_batch where goods_num = #{goodsNum}
  </select>
  
  
      <resultMap id="BaseResultMap2" type="com.cbice.distribute.core.model.TrancationReport">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="goods_num" jdbcType="VARCHAR" property="goodsNum" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
    <result column="t_user_id" jdbcType="BIGINT" property="tUserId" />
    <result column="goods_price" jdbcType="BIGINT" property="goodsPrice" />
    <result column="assets_account" jdbcType="BIGINT" property="assetsAccount" />
    <result column="distribute_num" jdbcType="BIGINT" property="goodCount" />
     <result column="t_higer_user_id" jdbcType="BIGINT" property="tHigerUserId" />
     <result column="user_id" jdbcType="BIGINT" property="userId" />
  </resultMap>
  

	<select id="saleCodeOut" parameterType="map" resultMap="BaseResultMap2">
	
select distinct a.*,b.dealer_name,c.goods_price from t_goods_batch a, t_agency b,
(select a.* from t_goods a,t_goods_batch b where a.goods_num=b.goods_num and 

a.goods_name=b.goods_name) c
where a.states='1' and b.id=a.t_user_id 
			and a.id in  (select distinct id from v_order_bitch)
			and a.t_user_id=#{userId}
                          and c.goods_num=a.goods_num
                          and c.goods_name=a.goods_name
		<if test="goodsNum != null and goodsNum !=''">
			and a.goods_num like concat(concat('%', #{goodsNum}), '%')
		</if>
		<if test="goodsName != null and goodsName !=''">
			and a.goods_name like concat(concat('%', #{goodsName}), '%')
		</if>
		ORDER BY a.id desc
		<if test="limit != null">limit #{limit}</if>
		<if test="start != null">offset #{start}</if>
	</select>
	<select id="countSaleCodeOut" parameterType="map" resultType="int">
		select count(1) from (
	select distinct a.*,b.dealer_name,c.goods_price from t_goods_batch a, t_agency  

b,
(select a.* from t_goods a,t_goods_batch b where a.goods_num=b.goods_num and 

a.goods_name=b.goods_name) c
where a.states='1' and b.id=a.t_user_id 
			and a.id in  (select distinct id from v_order_bitch)
			and a.t_user_id=#{userId}
                          and c.goods_num=a.goods_num
                          and c.goods_name=a.goods_name
		<if test="goodsNum != null and goodsNum !=''">
			and a.goods_num like concat(concat('%', #{goodsNum}), '%')
		</if>
		<if test="goodsName != null and goodsName !=''">
			and a.goods_name like concat(concat('%', #{goodsName}), '%')
		</if>
		) a
	</select>
  
</mapper>