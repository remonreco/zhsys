<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cbice.distribute.core.db.data.HsCommodityMapper">
  <resultMap id="BaseResultMap" type="com.cbice.distribute.core.db.model.HsCommodity">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 19 17:38:54 CST 2015.
    -->
    <id column="com_id" jdbcType="BIGINT" property="comId" />
    <id column="sys_id" jdbcType="VARCHAR" property="sysId" />
    <result column="com_name" jdbcType="VARCHAR" property="comName" />
    <result column="item_name" jdbcType="VARCHAR" property="itemName" />
    <result column="list_organization" jdbcType="VARCHAR" property="listOrganization" />
    <result column="sale_unit" jdbcType="VARCHAR" property="saleUnit" />
    <result column="sale_price" jdbcType="DOUBLE" property="salePrice" />
    <result column="sale_num" jdbcType="BIGINT" property="saleNum" />
    <result column="sale_money" jdbcType="DOUBLE" property="saleMoney" />
    <result column="currency_num" jdbcType="BIGINT" property="currencyNum" />
    <result column="freeze_num" jdbcType="BIGINT" property="freezeNum" />
    <result column="start_date" jdbcType="DATE" property="startDate" />
    <result column="end_date" jdbcType="DATE" property="endDate" />
    <result column="com_picture" jdbcType="VARCHAR" property="comPicture" />
    <result column="exchange_state" jdbcType="INTEGER" property="exchangeState" />
    <result column="min_num" jdbcType="INTEGER" property="minNum" />
    <result column="introduction" jdbcType="VARCHAR" property="introduction" />
    <result column="version" jdbcType="BIGINT" property="version" />
    <result column="modify_name" jdbcType="VARCHAR" property="modifyName" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="backup1" jdbcType="CHAR" property="backup1" />
    <result column="backup2" jdbcType="CHAR" property="backup2" />
    <result column="backup3" jdbcType="CHAR" property="backup3" />
    <result column="backup4" jdbcType="CHAR" property="backup4" />
    <result column="backup5" jdbcType="CHAR" property="backup5" />
    <result column="backup6" jdbcType="CHAR" property="backup6" />
    <result column="backup7" jdbcType="CHAR" property="backup7" />
    <result column="backup8" jdbcType="CHAR" property="backup8" />
    <result column="backup9" jdbcType="CHAR" property="backup9" />
    <result column="backup10" jdbcType="CHAR" property="backup10" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 19 17:38:54 CST 2015.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 19 17:38:54 CST 2015.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 19 17:38:54 CST 2015.
    -->
    com_id, sys_id, com_name, item_name, list_organization, sale_unit, sale_price, sale_num, 
    sale_money, currency_num, freeze_num, start_date, end_date, com_picture, exchange_state, 
    min_num, introduction, version, modify_name, modify_time, backup1, backup2, backup3, 
    backup4, backup5, backup6, backup7, backup8, backup9, backup10
  </sql>
  <select id="selectByExample" parameterType="com.cbice.distribute.core.db.model.HsCommodityExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 19 17:38:54 CST 2015.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hs_commodity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 19 17:38:54 CST 2015.
    -->
    select 
    <include refid="Base_Column_List" />
    from hs_commodity
    where com_id = #{comId,jdbcType=BIGINT}
      and sys_id = #{sysId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 19 17:38:54 CST 2015.
    -->
    delete from hs_commodity
    where com_id = #{comId,jdbcType=BIGINT}
      and sys_id = #{sysId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cbice.distribute.core.db.model.HsCommodityExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 19 17:38:54 CST 2015.
    -->
    delete from hs_commodity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cbice.distribute.core.db.model.HsCommodity">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 19 17:38:54 CST 2015.
    -->
    insert into hs_commodity (com_id, sys_id, com_name, 
      item_name, list_organization, sale_unit, 
      sale_price, sale_num, sale_money, 
      currency_num, freeze_num, start_date, 
      end_date, com_picture, exchange_state, 
      min_num, introduction, version, 
      modify_name, modify_time, backup1, 
      backup2, backup3, backup4, backup5, 
      backup6, backup7, backup8, backup9, 
      backup10)
    values (#{comId,jdbcType=BIGINT}, #{sysId,jdbcType=VARCHAR}, #{comName,jdbcType=VARCHAR}, 
      #{itemName,jdbcType=VARCHAR}, #{listOrganization,jdbcType=VARCHAR}, #{saleUnit,jdbcType=VARCHAR}, 
      #{salePrice,jdbcType=DOUBLE}, #{saleNum,jdbcType=BIGINT}, #{saleMoney,jdbcType=DOUBLE}, 
      #{currencyNum,jdbcType=BIGINT}, #{freezeNum,jdbcType=BIGINT}, #{startDate,jdbcType=DATE}, 
      #{endDate,jdbcType=DATE}, #{comPicture,jdbcType=VARCHAR}, #{exchangeState,jdbcType=INTEGER}, 
      #{minNum,jdbcType=INTEGER}, #{introduction,jdbcType=VARCHAR}, #{version,jdbcType=BIGINT}, 
      #{modifyName,jdbcType=VARCHAR}, #{modifyTime,jdbcType=TIMESTAMP}, #{backup1,jdbcType=CHAR}, 
      #{backup2,jdbcType=CHAR}, #{backup3,jdbcType=CHAR}, #{backup4,jdbcType=CHAR}, #{backup5,jdbcType=CHAR}, 
      #{backup6,jdbcType=CHAR}, #{backup7,jdbcType=CHAR}, #{backup8,jdbcType=CHAR}, #{backup9,jdbcType=CHAR}, 
      #{backup10,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cbice.distribute.core.db.model.HsCommodity">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 19 17:38:54 CST 2015.
    -->
    insert into hs_commodity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="comId != null">
        com_id,
      </if>
      <if test="sysId != null">
        sys_id,
      </if>
      <if test="comName != null">
        com_name,
      </if>
      <if test="itemName != null">
        item_name,
      </if>
      <if test="listOrganization != null">
        list_organization,
      </if>
      <if test="saleUnit != null">
        sale_unit,
      </if>
      <if test="salePrice != null">
        sale_price,
      </if>
      <if test="saleNum != null">
        sale_num,
      </if>
      <if test="saleMoney != null">
        sale_money,
      </if>
      <if test="currencyNum != null">
        currency_num,
      </if>
      <if test="freezeNum != null">
        freeze_num,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="comPicture != null">
        com_picture,
      </if>
      <if test="exchangeState != null">
        exchange_state,
      </if>
      <if test="minNum != null">
        min_num,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="modifyName != null">
        modify_name,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="backup1 != null">
        backup1,
      </if>
      <if test="backup2 != null">
        backup2,
      </if>
      <if test="backup3 != null">
        backup3,
      </if>
      <if test="backup4 != null">
        backup4,
      </if>
      <if test="backup5 != null">
        backup5,
      </if>
      <if test="backup6 != null">
        backup6,
      </if>
      <if test="backup7 != null">
        backup7,
      </if>
      <if test="backup8 != null">
        backup8,
      </if>
      <if test="backup9 != null">
        backup9,
      </if>
      <if test="backup10 != null">
        backup10,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="comId != null">
        #{comId,jdbcType=BIGINT},
      </if>
      <if test="sysId != null">
        #{sysId,jdbcType=VARCHAR},
      </if>
      <if test="comName != null">
        #{comName,jdbcType=VARCHAR},
      </if>
      <if test="itemName != null">
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="listOrganization != null">
        #{listOrganization,jdbcType=VARCHAR},
      </if>
      <if test="saleUnit != null">
        #{saleUnit,jdbcType=VARCHAR},
      </if>
      <if test="salePrice != null">
        #{salePrice,jdbcType=DOUBLE},
      </if>
      <if test="saleNum != null">
        #{saleNum,jdbcType=BIGINT},
      </if>
      <if test="saleMoney != null">
        #{saleMoney,jdbcType=DOUBLE},
      </if>
      <if test="currencyNum != null">
        #{currencyNum,jdbcType=BIGINT},
      </if>
      <if test="freezeNum != null">
        #{freezeNum,jdbcType=BIGINT},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=DATE},
      </if>
      <if test="comPicture != null">
        #{comPicture,jdbcType=VARCHAR},
      </if>
      <if test="exchangeState != null">
        #{exchangeState,jdbcType=INTEGER},
      </if>
      <if test="minNum != null">
        #{minNum,jdbcType=INTEGER},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=BIGINT},
      </if>
      <if test="modifyName != null">
        #{modifyName,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="backup1 != null">
        #{backup1,jdbcType=CHAR},
      </if>
      <if test="backup2 != null">
        #{backup2,jdbcType=CHAR},
      </if>
      <if test="backup3 != null">
        #{backup3,jdbcType=CHAR},
      </if>
      <if test="backup4 != null">
        #{backup4,jdbcType=CHAR},
      </if>
      <if test="backup5 != null">
        #{backup5,jdbcType=CHAR},
      </if>
      <if test="backup6 != null">
        #{backup6,jdbcType=CHAR},
      </if>
      <if test="backup7 != null">
        #{backup7,jdbcType=CHAR},
      </if>
      <if test="backup8 != null">
        #{backup8,jdbcType=CHAR},
      </if>
      <if test="backup9 != null">
        #{backup9,jdbcType=CHAR},
      </if>
      <if test="backup10 != null">
        #{backup10,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cbice.distribute.core.db.model.HsCommodityExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 19 17:38:54 CST 2015.
    -->
    select count(*) from hs_commodity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 19 17:38:54 CST 2015.
    -->
    update hs_commodity
    <set>
      <if test="record.comId != null">
        com_id = #{record.comId,jdbcType=BIGINT},
      </if>
      <if test="record.sysId != null">
        sys_id = #{record.sysId,jdbcType=VARCHAR},
      </if>
      <if test="record.comName != null">
        com_name = #{record.comName,jdbcType=VARCHAR},
      </if>
      <if test="record.itemName != null">
        item_name = #{record.itemName,jdbcType=VARCHAR},
      </if>
      <if test="record.listOrganization != null">
        list_organization = #{record.listOrganization,jdbcType=VARCHAR},
      </if>
      <if test="record.saleUnit != null">
        sale_unit = #{record.saleUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.salePrice != null">
        sale_price = #{record.salePrice,jdbcType=DOUBLE},
      </if>
      <if test="record.saleNum != null">
        sale_num = #{record.saleNum,jdbcType=BIGINT},
      </if>
      <if test="record.saleMoney != null">
        sale_money = #{record.saleMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.currencyNum != null">
        currency_num = #{record.currencyNum,jdbcType=BIGINT},
      </if>
      <if test="record.freezeNum != null">
        freeze_num = #{record.freezeNum,jdbcType=BIGINT},
      </if>
      <if test="record.startDate != null">
        start_date = #{record.startDate,jdbcType=DATE},
      </if>
      <if test="record.endDate != null">
        end_date = #{record.endDate,jdbcType=DATE},
      </if>
      <if test="record.comPicture != null">
        com_picture = #{record.comPicture,jdbcType=VARCHAR},
      </if>
      <if test="record.exchangeState != null">
        exchange_state = #{record.exchangeState,jdbcType=INTEGER},
      </if>
      <if test="record.minNum != null">
        min_num = #{record.minNum,jdbcType=INTEGER},
      </if>
      <if test="record.introduction != null">
        introduction = #{record.introduction,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=BIGINT},
      </if>
      <if test="record.modifyName != null">
        modify_name = #{record.modifyName,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.backup1 != null">
        backup1 = #{record.backup1,jdbcType=CHAR},
      </if>
      <if test="record.backup2 != null">
        backup2 = #{record.backup2,jdbcType=CHAR},
      </if>
      <if test="record.backup3 != null">
        backup3 = #{record.backup3,jdbcType=CHAR},
      </if>
      <if test="record.backup4 != null">
        backup4 = #{record.backup4,jdbcType=CHAR},
      </if>
      <if test="record.backup5 != null">
        backup5 = #{record.backup5,jdbcType=CHAR},
      </if>
      <if test="record.backup6 != null">
        backup6 = #{record.backup6,jdbcType=CHAR},
      </if>
      <if test="record.backup7 != null">
        backup7 = #{record.backup7,jdbcType=CHAR},
      </if>
      <if test="record.backup8 != null">
        backup8 = #{record.backup8,jdbcType=CHAR},
      </if>
      <if test="record.backup9 != null">
        backup9 = #{record.backup9,jdbcType=CHAR},
      </if>
      <if test="record.backup10 != null">
        backup10 = #{record.backup10,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 19 17:38:54 CST 2015.
    -->
    update hs_commodity
    set com_id = #{record.comId,jdbcType=BIGINT},
      sys_id = #{record.sysId,jdbcType=VARCHAR},
      com_name = #{record.comName,jdbcType=VARCHAR},
      item_name = #{record.itemName,jdbcType=VARCHAR},
      list_organization = #{record.listOrganization,jdbcType=VARCHAR},
      sale_unit = #{record.saleUnit,jdbcType=VARCHAR},
      sale_price = #{record.salePrice,jdbcType=DOUBLE},
      sale_num = #{record.saleNum,jdbcType=BIGINT},
      sale_money = #{record.saleMoney,jdbcType=DOUBLE},
      currency_num = #{record.currencyNum,jdbcType=BIGINT},
      freeze_num = #{record.freezeNum,jdbcType=BIGINT},
      start_date = #{record.startDate,jdbcType=DATE},
      end_date = #{record.endDate,jdbcType=DATE},
      com_picture = #{record.comPicture,jdbcType=VARCHAR},
      exchange_state = #{record.exchangeState,jdbcType=INTEGER},
      min_num = #{record.minNum,jdbcType=INTEGER},
      introduction = #{record.introduction,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=BIGINT},
      modify_name = #{record.modifyName,jdbcType=VARCHAR},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      backup1 = #{record.backup1,jdbcType=CHAR},
      backup2 = #{record.backup2,jdbcType=CHAR},
      backup3 = #{record.backup3,jdbcType=CHAR},
      backup4 = #{record.backup4,jdbcType=CHAR},
      backup5 = #{record.backup5,jdbcType=CHAR},
      backup6 = #{record.backup6,jdbcType=CHAR},
      backup7 = #{record.backup7,jdbcType=CHAR},
      backup8 = #{record.backup8,jdbcType=CHAR},
      backup9 = #{record.backup9,jdbcType=CHAR},
      backup10 = #{record.backup10,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cbice.distribute.core.db.model.HsCommodity">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 19 17:38:54 CST 2015.
    -->
    update hs_commodity
    <set>
      <if test="comName != null">
        com_name = #{comName,jdbcType=VARCHAR},
      </if>
      <if test="itemName != null">
        item_name = #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="listOrganization != null">
        list_organization = #{listOrganization,jdbcType=VARCHAR},
      </if>
      <if test="saleUnit != null">
        sale_unit = #{saleUnit,jdbcType=VARCHAR},
      </if>
      <if test="salePrice != null">
        sale_price = #{salePrice,jdbcType=DOUBLE},
      </if>
      <if test="saleNum != null">
        sale_num = #{saleNum,jdbcType=BIGINT},
      </if>
      <if test="saleMoney != null">
        sale_money = #{saleMoney,jdbcType=DOUBLE},
      </if>
      <if test="currencyNum != null">
        currency_num = #{currencyNum,jdbcType=BIGINT},
      </if>
      <if test="freezeNum != null">
        freeze_num = #{freezeNum,jdbcType=BIGINT},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=DATE},
      </if>
      <if test="comPicture != null">
        com_picture = #{comPicture,jdbcType=VARCHAR},
      </if>
      <if test="exchangeState != null">
        exchange_state = #{exchangeState,jdbcType=INTEGER},
      </if>
      <if test="minNum != null">
        min_num = #{minNum,jdbcType=INTEGER},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="modifyName != null">
        modify_name = #{modifyName,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="backup1 != null">
        backup1 = #{backup1,jdbcType=CHAR},
      </if>
      <if test="backup2 != null">
        backup2 = #{backup2,jdbcType=CHAR},
      </if>
      <if test="backup3 != null">
        backup3 = #{backup3,jdbcType=CHAR},
      </if>
      <if test="backup4 != null">
        backup4 = #{backup4,jdbcType=CHAR},
      </if>
      <if test="backup5 != null">
        backup5 = #{backup5,jdbcType=CHAR},
      </if>
      <if test="backup6 != null">
        backup6 = #{backup6,jdbcType=CHAR},
      </if>
      <if test="backup7 != null">
        backup7 = #{backup7,jdbcType=CHAR},
      </if>
      <if test="backup8 != null">
        backup8 = #{backup8,jdbcType=CHAR},
      </if>
      <if test="backup9 != null">
        backup9 = #{backup9,jdbcType=CHAR},
      </if>
      <if test="backup10 != null">
        backup10 = #{backup10,jdbcType=CHAR},
      </if>
    </set>
    where com_id = #{comId,jdbcType=BIGINT}
      and sys_id = #{sysId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cbice.distribute.core.db.model.HsCommodity">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 19 17:38:54 CST 2015.
    -->
    update hs_commodity
    set com_name = #{comName,jdbcType=VARCHAR},
      item_name = #{itemName,jdbcType=VARCHAR},
      list_organization = #{listOrganization,jdbcType=VARCHAR},
      sale_unit = #{saleUnit,jdbcType=VARCHAR},
      sale_price = #{salePrice,jdbcType=DOUBLE},
      sale_num = #{saleNum,jdbcType=BIGINT},
      sale_money = #{saleMoney,jdbcType=DOUBLE},
      currency_num = #{currencyNum,jdbcType=BIGINT},
      freeze_num = #{freezeNum,jdbcType=BIGINT},
      start_date = #{startDate,jdbcType=DATE},
      end_date = #{endDate,jdbcType=DATE},
      com_picture = #{comPicture,jdbcType=VARCHAR},
      exchange_state = #{exchangeState,jdbcType=INTEGER},
      min_num = #{minNum,jdbcType=INTEGER},
      introduction = #{introduction,jdbcType=VARCHAR},
      version = #{version,jdbcType=BIGINT},
      modify_name = #{modifyName,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      backup1 = #{backup1,jdbcType=CHAR},
      backup2 = #{backup2,jdbcType=CHAR},
      backup3 = #{backup3,jdbcType=CHAR},
      backup4 = #{backup4,jdbcType=CHAR},
      backup5 = #{backup5,jdbcType=CHAR},
      backup6 = #{backup6,jdbcType=CHAR},
      backup7 = #{backup7,jdbcType=CHAR},
      backup8 = #{backup8,jdbcType=CHAR},
      backup9 = #{backup9,jdbcType=CHAR},
      backup10 = #{backup10,jdbcType=CHAR}
    where com_id = #{comId,jdbcType=BIGINT}
      and sys_id = #{sysId,jdbcType=VARCHAR}
  </update>
  
   <select id="commodityQueryList" parameterType="map" resultType="java.util.HashMap">
  		select  a.com_id , a.com_name , a.item_name, a.list_organization , a.sale_unit , a.sale_price, a. sale_num, a.sale_money, a.currency_num , a.freeze_num         
				, to_char( a.start_date,'YYYY-MM-DD') as start_date,to_char( a.end_date,'YYYY-MM-DD') as  end_date, a.exchange_state, a.com_picture,  a.min_num , a.introduction, a.modify_name, a.modify_time 
		from hs_commodity a  where a.sys_id = #{sysId}
		<if test="comId != null and comId !=''">
			 and a.com_id = #{comId}
		</if>
		<if test="comName != null and comName !=''">
			 and a.com_name like concat(concat('%', #{comName}), '%')
		</if>
		order by a.com_id DESC
		limit #{limit} offset #{offset} 
  </select>
  
  <select id="countCommodityQueryList" parameterType="map" resultType="int">
  	select count(1) from(
   		select   a.com_id , a.com_name , a.item_name, a.list_organization , a.sale_unit , a.sale_price, a. sale_num, a.sale_money, a.currency_num , a.freeze_num         
				, to_char( a.start_date,'YYYY-MM-DD') as start_date,to_char( a.end_date,'YYYY-MM-DD') as  end_date, a.exchange_state, a.com_picture,  a.min_num , a.introduction, a.modify_name, a.modify_time 
		from hs_commodity a  where a.sys_id = #{sysId}
		<if test="comId != null and comId !=''">
			 and a.com_id = #{comId}
		</if>
		<if test="comName != null and comName !=''">
			 and a.com_name like concat(concat('%', #{comName}), '%')
		</if>
  	)aa 
  
  </select>
 
  <select id="commodityQuery" parameterType="map" resultType="java.util.HashMap">
  		select    distinct a.com_id , a.com_name , a.item_name, a.list_organization , a.sale_unit , a.sale_price, a. sale_num, a.sale_money, a.currency_num , a.freeze_num         
				, to_char( a.start_date,'YYYY-MM-DD') as start_date,to_char( a.end_date,'YYYY-MM-DD') as  end_date, a.exchange_state, a.com_picture,  a.min_num , a.introduction, a.modify_name, a.modify_time 
		from hs_commodity a ,hs_commodity_rule b where a.com_id=b.com_id and a.exchange_state = #{exchangeState}   and a.sys_id = #{sysId}
		<if test="itemName != null and itemName !=''">
			 and a.item_name=#{itemName}
		</if>
  </select>
  
  <select id="commodityQueryBean" parameterType="map" resultMap="BaseResultMap">
  		select    distinct a.com_id , a.com_name , a.item_name, a.list_organization , a.sale_unit , a.sale_price, a. sale_num, a.sale_money, a.currency_num , a.freeze_num         
				, to_char( a.start_date,'YYYY-MM-DD') as start_date,to_char( a.end_date,'YYYY-MM-DD') as  end_date, a.exchange_state, a.com_picture,  a.min_num , a.introduction, a.modify_name, a.modify_time 
		from hs_commodity a ,hs_commodity_rule b where a.com_id=b.com_id and a.exchange_state = #{exchangeState}  and a.sys_id = #{sysId}
		<if test="itemName != null and itemName !=''">
			 and a.item_name=#{itemName}  
		</if>
		limit #{limit} offset #{offset} 
  </select>
  
  <select id="countSelectBy" parameterType="map" resultType="int">
  	select count(1) from(
  		select    distinct a.com_id , a.com_name , a.item_name, a.list_organization , a.sale_unit , a.sale_price, a. sale_num, a.sale_money, a.currency_num , a.freeze_num         
				, to_char( a.start_date,'YYYY-MM-DD') as start_date,to_char( a.end_date,'YYYY-MM-DD') as  end_date, a.exchange_state, a.com_picture,  a.min_num , a.introduction, a.modify_name, a.modify_time 
		from hs_commodity a ,hs_commodity_rule b where a.com_id=b.com_id  and a.exchange_state = #{exchangeState} and a.sys_id = #{sysId}
			<if test="itemName != null and itemName !=''">
			 and a.item_name=#{itemName}
		</if>
  	)aa 
  
  </select>
  
  <select id="queryProductType" parameterType="map" resultMap="BaseResultMap">
  	select distinct hs.item_name from hs_commodity hs ,hs_commodity_rule hr
	where hs.com_id = hr.com_id 
	and hs.exchange_state = #{exchangeState} and hs.sys_id = #{sysId}
	order by hs.item_name
  </select>
  
  <update id="updateCurrencyNumAndFreezeNum" parameterType="com.cbice.distribute.core.db.model.HsCommodity">
  	update hs_commodity 
  	set 
  	<if test="currencyNum != null and currencyNum !=''">
		currency_num = (currency_num + #{currencyNum}),  
	</if>
	<if test="freezeNum != null and freezeNum !=''">
    	freeze_num = (freeze_num - #{freezeNum,jdbcType=BIGINT})
    </if>
     where com_id = #{comId} and sys_id = #{sysId}
  </update>
  
    <select id="queryLoadItemName" parameterType="map" resultMap="BaseResultMap">
  	select distinct item_name from hs_commodity where sys_id = #{sysId}
  </select>
  
  <select id="queryLoadComName" parameterType="map" resultMap="BaseResultMap">
  	select distinct com_name from hs_commodity where 1=1
  		<if test="itemName != null and itemName !=''">
  		and item_name=#{itemName} and sys_id = #{sysId}
  		</if>
  </select>
  
  <select id="selectBycomName" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hs_commodity
    where com_name = #{comName} and sys_id = #{sysId}
  </select>
  
  <select id="queryexchangeId" parameterType="map" resultMap="BaseResultMap">
    select com_id
    from hs_commodity
    where com_name = #{comName} and sys_id = #{sysId}
  </select>
  
  <insert id="insertNewComdity" parameterType="map">
    insert into hs_commodity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="comId != null">
        com_id,
      </if>
      <if test="comName != null">
        com_name,
      </if>
      <if test="sysId != null">
        sys_id,
      </if>
      <if test="itemName != null">
        item_name,
      </if>
      <if test="listOrganization != null">
        list_organization,
      </if>
      <if test="saleUnit != null">
        sale_unit,
      </if>
      <if test="salePrice != null">
        sale_price,
      </if>
      <if test="saleNum != null">
        sale_num,
      </if>
      <if test="saleMoney != null">
        sale_money,
      </if>
      <if test="currencyNum != null">
        currency_num,
      </if>
      <if test="freezeNum != null">
        freeze_num,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="exchangeState != null">
        exchange_state,
      </if>
      <if test="comPicture != null">
        com_picture,
      </if>
      <if test="productType != null">
        product_type,
      </if>
      <if test="minNum != null">
        min_num,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="modifyName != null">
        modify_name,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="backup1 != null">
        backup1,
      </if>
      <if test="backup2 != null">
        backup2,
      </if>
      <if test="backup3 != null">
        backup3,
      </if>
      <if test="backup4 != null">
        backup4,
      </if>
      <if test="backup5 != null">
        backup5,
      </if>
      <if test="backup6 != null">
        backup6,
      </if>
      <if test="backup7 != null">
        backup7,
      </if>
      <if test="backup8 != null">
        backup8,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="comId != null">
        #{comId,jdbcType=BIGINT},
      </if>
      <if test="comName != null">
        #{comName,jdbcType=VARCHAR},
      </if>
      <if test="sysId != null">
        #{sysId,jdbcType=VARCHAR},
      </if>
      <if test="itemName != null">
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="listOrganization != null">
        #{listOrganization,jdbcType=VARCHAR},
      </if>
      <if test="saleUnit != null">
        #{saleUnit,jdbcType=VARCHAR},
      </if>
      <if test="salePrice != null">
        #{salePrice,jdbcType=DOUBLE},
      </if>
      <if test="saleNum != null">
        #{saleNum,jdbcType=BIGINT},
      </if>
      <if test="saleMoney != null">
        #{saleMoney,jdbcType=DOUBLE},
      </if>
      <if test="currencyNum != null">
        #{currencyNum,jdbcType=BIGINT},
      </if>
      <if test="freezeNum != null">
        #{freezeNum,jdbcType=BIGINT},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=DATE},
      </if>
      <if test="exchangeState != null">
        #{exchangeState,jdbcType=INTEGER},
      </if>
      <if test="comPicture != null">
        #{comPicture,jdbcType=VARCHAR},
      </if>
      <if test="productType != null">
        #{productType,jdbcType=VARCHAR},
      </if>
      <if test="minNum != null">
        #{minNum,jdbcType=INTEGER},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="modifyName != null">
        #{modifyName,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="backup1 != null">
        #{backup1,jdbcType=CHAR},
      </if>
      <if test="backup2 != null">
        #{backup2,jdbcType=CHAR},
      </if>
      <if test="backup3 != null">
        #{backup3,jdbcType=CHAR},
      </if>
      <if test="backup4 != null">
        #{backup4,jdbcType=CHAR},
      </if>
      <if test="backup5 != null">
        #{backup5,jdbcType=CHAR},
      </if>
      <if test="backup6 != null">
        #{backup6,jdbcType=CHAR},
      </if>
      <if test="backup7 != null">
        #{backup7,jdbcType=CHAR},
      </if>
      <if test="backup8 != null">
        #{backup8,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  
  <!--   <select id="exchangeRuleQuery" parameterType="map" resultMap="BaseResultMap">
  	select a.com_id,a.com_name,a.min_num,b.exchange_id exchangeId,b.exchange_name exchangeName,b.exchange_num exchangeNum,b.com_type comType from hs_commodity a,hs_exchange_rule b 
  	where a.com_id = b.com_id and a.com_id=#{comId}
 
  </select> -->
    
  <select id="exchangeRuleQuery" parameterType="map" resultType="java.util.HashMap">
  	select a.com_id,a.com_name,a.min_num,b.exchange_id ,b.exchange_name ,b.exchange_num ,b.com_type  from hs_commodity a,hs_commodity_rule b 
  	where a.com_id = b.com_id and a.com_id=#{comId} and a.sys_id = #{sysId}
  	order by b.exchange_id DESC
  </select>
  
  <update id="updateCommodityById" parameterType="com.cbice.distribute.core.db.model.HsCommodity">
  		update hs_commodity 
		  	set 
		  	<if test="giftNum != null and giftNum !=''">
				currency_num = (currency_num - #{giftNum}),  
				freeze_num = (freeze_num + #{giftNum}) 
			</if>
		     where com_id = #{comId} and sys_id = #{sysId}
  </update>
  
  <update id="deleteCommodityById" parameterType="com.cbice.distribute.core.db.model.HsCommodity">
  		update hs_commodity 
		  	set 
		  	<if test="giftNum != null and giftNum !=''">
				currency_num = (currency_num + #{giftNum}),  
				freeze_num = (freeze_num - #{giftNum}) 
			</if>
		     where com_id = #{comId} and sys_id = #{sysId}
  </update>
  
  <update id="updateByPrimaryKeyAndVersion" parameterType="com.cbice.distribute.core.db.model.HsCommodity">
  	update hs_commodity 
  	set currency_num = (currency_num - #{currencyNum}),  
    	freeze_num = (freeze_num + #{freezeNum,jdbcType=BIGINT}),
    	version = (version +1)
    where com_id = #{comId} and version = #{version} and sys_id = #{sysId}
  </update>
</mapper>