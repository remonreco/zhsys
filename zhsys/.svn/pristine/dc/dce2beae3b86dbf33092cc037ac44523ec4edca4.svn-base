<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cbice.distribute.core.db.data.THisOtcrealtimeMapper" >
  <resultMap id="BaseResultMap" type="com.cbice.distribute.core.db.model.THisOtcrealtime" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 11 11:02:11 CST 2015.
    -->
    <result column="init_date" property="initDate" jdbcType="BIGINT" />
    <result column="curr_date" property="currDate" jdbcType="BIGINT" />
    <result column="curr_time" property="currTime" jdbcType="BIGINT" />
    <result column="serial_no" property="serialNo" jdbcType="BIGINT" />
    <result column="branch_no" property="branchNo" jdbcType="BIGINT" />
    <result column="fund_account" property="fundAccount" jdbcType="VARCHAR" />
    <result column="client_id" property="clientId" jdbcType="VARCHAR" />
    <result column="otcexch_type" property="otcexchType" jdbcType="VARCHAR" />
    <result column="seat_no" property="seatNo" jdbcType="VARCHAR" />
    <result column="otc_account" property="otcAccount" jdbcType="VARCHAR" />
    <result column="otc_code" property="otcCode" jdbcType="VARCHAR" />
    <result column="otc_prop" property="otcProp" jdbcType="VARCHAR" />
    <result column="entrust_no" property="entrustNo" jdbcType="BIGINT" />
    <result column="report_no" property="reportNo" jdbcType="BIGINT" />
    <result column="business_amount" property="businessAmount" jdbcType="DOUBLE" />
    <result column="business_price" property="businessPrice" jdbcType="DOUBLE" />
    <result column="business_balance" property="businessBalance" jdbcType="DOUBLE" />
    <result column="opp_otcaccount" property="oppOtcaccount" jdbcType="VARCHAR" />
    <result column="business_no" property="businessNo" jdbcType="BIGINT" />
    <result column="business_time" property="businessTime" jdbcType="BIGINT" />
    <result column="real_status" property="realStatus" jdbcType="VARCHAR" />
    <result column="cancel_serialno" property="cancelSerialno" jdbcType="VARCHAR" />
    <result column="position_str" property="positionStr" jdbcType="VARCHAR" />
    <result column="nature_time" property="natureTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 11 11:02:11 CST 2015.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 11 11:02:11 CST 2015.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 11 11:02:11 CST 2015.
    -->
    init_date, curr_date, curr_time, serial_no, branch_no, fund_account, client_id, otcexch_type, 
    seat_no, otc_account, otc_code, otc_prop, entrust_no, report_no, business_amount, 
    business_price, business_balance, opp_otcaccount, business_no, business_time, real_status, 
    cancel_serialno, position_str, nature_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cbice.distribute.core.db.model.THisOtcrealtimeExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 11 11:02:11 CST 2015.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_his_otcrealtime
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.cbice.distribute.core.db.model.THisOtcrealtimeExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 11 11:02:11 CST 2015.
    -->
    delete from t_his_otcrealtime
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cbice.distribute.core.db.model.THisOtcrealtime" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 11 11:02:11 CST 2015.
    -->
    insert into t_his_otcrealtime (init_date, curr_date, curr_time, 
      serial_no, branch_no, fund_account, 
      client_id, otcexch_type, seat_no, 
      otc_account, otc_code, otc_prop, 
      entrust_no, report_no, business_amount, 
      business_price, business_balance, opp_otcaccount, 
      business_no, business_time, real_status, 
      cancel_serialno, position_str, nature_time
      )
    values (#{initDate,jdbcType=BIGINT}, #{currDate,jdbcType=BIGINT}, #{currTime,jdbcType=BIGINT}, 
      #{serialNo,jdbcType=BIGINT}, #{branchNo,jdbcType=BIGINT}, #{fundAccount,jdbcType=VARCHAR}, 
      #{clientId,jdbcType=VARCHAR}, #{otcexchType,jdbcType=VARCHAR}, #{seatNo,jdbcType=VARCHAR}, 
      #{otcAccount,jdbcType=VARCHAR}, #{otcCode,jdbcType=VARCHAR}, #{otcProp,jdbcType=VARCHAR}, 
      #{entrustNo,jdbcType=BIGINT}, #{reportNo,jdbcType=BIGINT}, #{businessAmount,jdbcType=DOUBLE}, 
      #{businessPrice,jdbcType=DOUBLE}, #{businessBalance,jdbcType=DOUBLE}, #{oppOtcaccount,jdbcType=VARCHAR}, 
      #{businessNo,jdbcType=BIGINT}, #{businessTime,jdbcType=BIGINT}, #{realStatus,jdbcType=VARCHAR}, 
      #{cancelSerialno,jdbcType=VARCHAR}, #{positionStr,jdbcType=VARCHAR}, #{natureTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cbice.distribute.core.db.model.THisOtcrealtime" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 11 11:02:11 CST 2015.
    -->
    insert into t_his_otcrealtime
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="initDate != null" >
        init_date,
      </if>
      <if test="currDate != null" >
        curr_date,
      </if>
      <if test="currTime != null" >
        curr_time,
      </if>
      <if test="serialNo != null" >
        serial_no,
      </if>
      <if test="branchNo != null" >
        branch_no,
      </if>
      <if test="fundAccount != null" >
        fund_account,
      </if>
      <if test="clientId != null" >
        client_id,
      </if>
      <if test="otcexchType != null" >
        otcexch_type,
      </if>
      <if test="seatNo != null" >
        seat_no,
      </if>
      <if test="otcAccount != null" >
        otc_account,
      </if>
      <if test="otcCode != null" >
        otc_code,
      </if>
      <if test="otcProp != null" >
        otc_prop,
      </if>
      <if test="entrustNo != null" >
        entrust_no,
      </if>
      <if test="reportNo != null" >
        report_no,
      </if>
      <if test="businessAmount != null" >
        business_amount,
      </if>
      <if test="businessPrice != null" >
        business_price,
      </if>
      <if test="businessBalance != null" >
        business_balance,
      </if>
      <if test="oppOtcaccount != null" >
        opp_otcaccount,
      </if>
      <if test="businessNo != null" >
        business_no,
      </if>
      <if test="businessTime != null" >
        business_time,
      </if>
      <if test="realStatus != null" >
        real_status,
      </if>
      <if test="cancelSerialno != null" >
        cancel_serialno,
      </if>
      <if test="positionStr != null" >
        position_str,
      </if>
      <if test="natureTime != null" >
        nature_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="initDate != null" >
        #{initDate,jdbcType=BIGINT},
      </if>
      <if test="currDate != null" >
        #{currDate,jdbcType=BIGINT},
      </if>
      <if test="currTime != null" >
        #{currTime,jdbcType=BIGINT},
      </if>
      <if test="serialNo != null" >
        #{serialNo,jdbcType=BIGINT},
      </if>
      <if test="branchNo != null" >
        #{branchNo,jdbcType=BIGINT},
      </if>
      <if test="fundAccount != null" >
        #{fundAccount,jdbcType=VARCHAR},
      </if>
      <if test="clientId != null" >
        #{clientId,jdbcType=VARCHAR},
      </if>
      <if test="otcexchType != null" >
        #{otcexchType,jdbcType=VARCHAR},
      </if>
      <if test="seatNo != null" >
        #{seatNo,jdbcType=VARCHAR},
      </if>
      <if test="otcAccount != null" >
        #{otcAccount,jdbcType=VARCHAR},
      </if>
      <if test="otcCode != null" >
        #{otcCode,jdbcType=VARCHAR},
      </if>
      <if test="otcProp != null" >
        #{otcProp,jdbcType=VARCHAR},
      </if>
      <if test="entrustNo != null" >
        #{entrustNo,jdbcType=BIGINT},
      </if>
      <if test="reportNo != null" >
        #{reportNo,jdbcType=BIGINT},
      </if>
      <if test="businessAmount != null" >
        #{businessAmount,jdbcType=DOUBLE},
      </if>
      <if test="businessPrice != null" >
        #{businessPrice,jdbcType=DOUBLE},
      </if>
      <if test="businessBalance != null" >
        #{businessBalance,jdbcType=DOUBLE},
      </if>
      <if test="oppOtcaccount != null" >
        #{oppOtcaccount,jdbcType=VARCHAR},
      </if>
      <if test="businessNo != null" >
        #{businessNo,jdbcType=BIGINT},
      </if>
      <if test="businessTime != null" >
        #{businessTime,jdbcType=BIGINT},
      </if>
      <if test="realStatus != null" >
        #{realStatus,jdbcType=VARCHAR},
      </if>
      <if test="cancelSerialno != null" >
        #{cancelSerialno,jdbcType=VARCHAR},
      </if>
      <if test="positionStr != null" >
        #{positionStr,jdbcType=VARCHAR},
      </if>
      <if test="natureTime != null" >
        #{natureTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cbice.distribute.core.db.model.THisOtcrealtimeExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 11 11:02:11 CST 2015.
    -->
    select count(*) from t_his_otcrealtime
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 11 11:02:11 CST 2015.
    -->
    update t_his_otcrealtime
    <set >
      <if test="record.initDate != null" >
        init_date = #{record.initDate,jdbcType=BIGINT},
      </if>
      <if test="record.currDate != null" >
        curr_date = #{record.currDate,jdbcType=BIGINT},
      </if>
      <if test="record.currTime != null" >
        curr_time = #{record.currTime,jdbcType=BIGINT},
      </if>
      <if test="record.serialNo != null" >
        serial_no = #{record.serialNo,jdbcType=BIGINT},
      </if>
      <if test="record.branchNo != null" >
        branch_no = #{record.branchNo,jdbcType=BIGINT},
      </if>
      <if test="record.fundAccount != null" >
        fund_account = #{record.fundAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.clientId != null" >
        client_id = #{record.clientId,jdbcType=VARCHAR},
      </if>
      <if test="record.otcexchType != null" >
        otcexch_type = #{record.otcexchType,jdbcType=VARCHAR},
      </if>
      <if test="record.seatNo != null" >
        seat_no = #{record.seatNo,jdbcType=VARCHAR},
      </if>
      <if test="record.otcAccount != null" >
        otc_account = #{record.otcAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.otcCode != null" >
        otc_code = #{record.otcCode,jdbcType=VARCHAR},
      </if>
      <if test="record.otcProp != null" >
        otc_prop = #{record.otcProp,jdbcType=VARCHAR},
      </if>
      <if test="record.entrustNo != null" >
        entrust_no = #{record.entrustNo,jdbcType=BIGINT},
      </if>
      <if test="record.reportNo != null" >
        report_no = #{record.reportNo,jdbcType=BIGINT},
      </if>
      <if test="record.businessAmount != null" >
        business_amount = #{record.businessAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.businessPrice != null" >
        business_price = #{record.businessPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.businessBalance != null" >
        business_balance = #{record.businessBalance,jdbcType=DOUBLE},
      </if>
      <if test="record.oppOtcaccount != null" >
        opp_otcaccount = #{record.oppOtcaccount,jdbcType=VARCHAR},
      </if>
      <if test="record.businessNo != null" >
        business_no = #{record.businessNo,jdbcType=BIGINT},
      </if>
      <if test="record.businessTime != null" >
        business_time = #{record.businessTime,jdbcType=BIGINT},
      </if>
      <if test="record.realStatus != null" >
        real_status = #{record.realStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.cancelSerialno != null" >
        cancel_serialno = #{record.cancelSerialno,jdbcType=VARCHAR},
      </if>
      <if test="record.positionStr != null" >
        position_str = #{record.positionStr,jdbcType=VARCHAR},
      </if>
      <if test="record.natureTime != null" >
        nature_time = #{record.natureTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon May 11 11:02:11 CST 2015.
    -->
    update t_his_otcrealtime
    set init_date = #{record.initDate,jdbcType=BIGINT},
      curr_date = #{record.currDate,jdbcType=BIGINT},
      curr_time = #{record.currTime,jdbcType=BIGINT},
      serial_no = #{record.serialNo,jdbcType=BIGINT},
      branch_no = #{record.branchNo,jdbcType=BIGINT},
      fund_account = #{record.fundAccount,jdbcType=VARCHAR},
      client_id = #{record.clientId,jdbcType=VARCHAR},
      otcexch_type = #{record.otcexchType,jdbcType=VARCHAR},
      seat_no = #{record.seatNo,jdbcType=VARCHAR},
      otc_account = #{record.otcAccount,jdbcType=VARCHAR},
      otc_code = #{record.otcCode,jdbcType=VARCHAR},
      otc_prop = #{record.otcProp,jdbcType=VARCHAR},
      entrust_no = #{record.entrustNo,jdbcType=BIGINT},
      report_no = #{record.reportNo,jdbcType=BIGINT},
      business_amount = #{record.businessAmount,jdbcType=DOUBLE},
      business_price = #{record.businessPrice,jdbcType=DOUBLE},
      business_balance = #{record.businessBalance,jdbcType=DOUBLE},
      opp_otcaccount = #{record.oppOtcaccount,jdbcType=VARCHAR},
      business_no = #{record.businessNo,jdbcType=BIGINT},
      business_time = #{record.businessTime,jdbcType=BIGINT},
      real_status = #{record.realStatus,jdbcType=VARCHAR},
      cancel_serialno = #{record.cancelSerialno,jdbcType=VARCHAR},
      position_str = #{record.positionStr,jdbcType=VARCHAR},
      nature_time = #{record.natureTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
	
	<select id="CommissionQueryCollect" parameterType="map" resultType="java.util.HashMap">
	select sum(bb.cjsl) as cjsl,sum(cjje) as cjje,sum(fare0) as fare0,sum(current_amount) as current_amount,max(bb.developer) as developer,max(agent_name) as agent_name from (
		select x.*,y.agent_name from ( 
		select * from 
		( 
				select c.otc_code as otc_code,c.client_id, e.client_name, c.cjsl, c.cjje, f.fare0,i.current_amount,h.developer	from (
						select a.otc_code,a.client_id,a.otc_account, sum(a.business_amount) cjsl, sum(a.business_balance) cjje from t_his_otcrealtime a 
							where a.otc_prop &lt;&gt; '0C2'							
		                	and a.real_status = '0'		
		                	<if test="initDateStart != null and initDateStart !=''">
 	 							and to_date(to_char(a.init_date,'99999999'),'yyyyMMdd') &gt;= #{initDateStart}
      						</if> 
      						<if test="initDateEnd != null and initDateEnd !=''">
 	 							and to_date(to_char(a.init_date,'99999999'),'yyyyMMdd') &lt;= #{initDateEnd}
      						</if>
      						<if test="clientId != null and clientId !=''">
  								and (a.client_id = #{clientId} or #{clientId} is null)
      						</if>		
      						<if test="otcCode != null and otcCode !=''">
  								and (a.otc_code = #{otcCode} or #{otcCode} is null)
      						</if>									
		                	group by a.otc_code,a.client_id,a.otc_account) c,							
      			t_client e,													
           (select g.otc_code,g.client_id, sum(g.fare0) fare0	from t_his_otcdeliver g							
             			where g.business_flag in ('35018', '35017')							
                  			<if test="initDateStart != null and initDateStart !=''">
 	 							and to_date(to_char(g.init_date,'99999999'),'yyyyMMdd') &gt;= #{initDateStart}
      						</if> 
      						<if test="initDateEnd != null and initDateEnd !=''">
 	 							and to_date(to_char(g.init_date,'99999999'),'yyyyMMdd') &lt;= #{initDateEnd}
      						</if>							
             			group by g.otc_code,g.client_id) f,								
           (select cl.client_id,cl.developer from t_clientinfo cl union select o.client_id,o.developer from t_organinfo o ) h,							
            t_sdcostock i							
     			where c.client_id = e.client_id						
       			and c.client_id = f.client_id							
       			and c.otc_code  = f.otc_code						
       			and c.client_id = h.client_id							
       			and c.otc_account = i.sdc_account							
       			and c.otc_code    = i.sdc_code							
    	) nm							
    		union							
    	(							
    	select a.otc_code as otc_code,a.client_id,(select client_name from t_client b where b.client_id = a.client_id) as client_name,	0 as cjsl, 0 as cjje, 0 as fare0, current_amount,							
				(select developer from 							
      				(select cl.client_id,cl.developer from t_clientinfo cl union select o.client_id,o.developer from t_organinfo o) h 							
      				where h.client_id = a.client_id) as developer     							
     		from  t_otcstock a							
    		where   not exists (
    						select client_id from t_his_otcrealtime b							
                  	where b.client_id = a.client_id							
                    and b.otc_code = a.otc_code							
                    and b.otc_prop &lt;&gt; '0C2'							
                    and b.real_status = '0'							
         			<if test="initDateStart != null and initDateStart !=''">
 	 					and to_date(to_char(b.init_date,'99999999'),'yyyyMMdd') &gt;= #{initDateStart}
      				</if> 
      				<if test="initDateEnd != null and initDateEnd !=''">
 	 					and to_date(to_char(b.init_date,'99999999'),'yyyyMMdd') &lt;= #{initDateEnd}
      				</if>					
             		) 							
        	<if test="clientId != null and clientId !=''">
  				and (a.client_id = #{clientId} or #{clientId} is null)
      		</if>		
      		<if test="otcCode != null and otcCode !=''">
  				and (a.otc_code = #{otcCode} or #{otcCode} is null)
      		</if>							
    	)							
  		) x ,t_agentinfo y							
  		where 1=1
  		<if test="developer != null and developer !=''">
			and x.developer like concat('%', #{developer}, '%')
		</if> 						
    	and x.developer = y.agent_no) bb
		group by bb.developer
		limit #{limit} offset #{offset}  					
	</select>
	
	<select id="countSelectByCollect" parameterType="map" resultType="int">
	select count (1) from (
	select sum(bb.cjsl) as cjsl,sum(cjje) as cjje,sum(fare0) as fare0,sum(current_amount) as current_amount,max(bb.developer) as developer,max(agent_name) as agent_name from (
		select x.*,y.agent_name from ( 
		select * from 
		( 
				select c.otc_code as otc_code,c.client_id, e.client_name, c.cjsl, c.cjje, f.fare0,i.current_amount,h.developer	from (
						select a.otc_code,a.client_id,a.otc_account, sum(a.business_amount) cjsl, sum(a.business_balance) cjje from t_his_otcrealtime a 
							where a.otc_prop &lt;&gt; '0C2'							
		                	and a.real_status = '0'		
		                	<if test="initDateStart != null and initDateStart !=''">
 	 							and to_date(to_char(a.init_date,'99999999'),'yyyyMMdd') &gt;= #{initDateStart}
      						</if> 
      						<if test="initDateEnd != null and initDateEnd !=''">
 	 							and to_date(to_char(a.init_date,'99999999'),'yyyyMMdd') &lt;= #{initDateEnd}
      						</if>
      						<if test="clientId != null and clientId !=''">
  								and (a.client_id = #{clientId} or #{clientId} is null)
      						</if>		
      						<if test="otcCode != null and otcCode !=''">
  								and (a.otc_code = #{otcCode} or #{otcCode} is null)
      						</if>									
		                	group by a.otc_code,a.client_id,a.otc_account) c,							
      			t_client e,													
           (select g.otc_code,g.client_id, sum(g.fare0) fare0	from t_his_otcdeliver g							
             			where g.business_flag in ('35018', '35017')							
                  			<if test="initDateStart != null and initDateStart !=''">
 	 							and to_date(to_char(g.init_date,'99999999'),'yyyyMMdd') &gt;= #{initDateStart}
      						</if> 
      						<if test="initDateEnd != null and initDateEnd !=''">
 	 							and to_date(to_char(g.init_date,'99999999'),'yyyyMMdd') &lt;= #{initDateEnd}
      						</if>							
             			group by g.otc_code,g.client_id) f,								
           (select cl.client_id,cl.developer from t_clientinfo cl union select o.client_id,o.developer from t_organinfo o ) h,							
            t_sdcostock i							
     			where c.client_id = e.client_id						
       			and c.client_id = f.client_id							
       			and c.otc_code  = f.otc_code						
       			and c.client_id = h.client_id							
       			and c.otc_account = i.sdc_account							
       			and c.otc_code    = i.sdc_code							
    	) nm							
    		union							
    	(							
    	select a.otc_code as otc_code,a.client_id,(select client_name from t_client b where b.client_id = a.client_id) as client_name,	0 as cjsl, 0 as cjje, 0 as fare0, current_amount,							
				(select developer from 							
      				(select cl.client_id,cl.developer from t_clientinfo cl union select o.client_id,o.developer from t_organinfo o) h 							
      				where h.client_id = a.client_id) as developer     							
     		from  t_otcstock a							
    		where   not exists (
    						select client_id from t_his_otcrealtime b							
                  	where b.client_id = a.client_id							
                    and b.otc_code = a.otc_code							
                    and b.otc_prop &lt;&gt; '0C2'							
                    and b.real_status = '0'							
         			<if test="initDateStart != null and initDateStart !=''">
 	 					and to_date(to_char(b.init_date,'99999999'),'yyyyMMdd') &gt;= #{initDateStart}
      				</if> 
      				<if test="initDateEnd != null and initDateEnd !=''">
 	 					and to_date(to_char(b.init_date,'99999999'),'yyyyMMdd') &lt;= #{initDateEnd}
      				</if>					
             		) 							
        	<if test="clientId != null and clientId !=''">
  				and (a.client_id = #{clientId} or #{clientId} is null)
      		</if>		
      		<if test="otcCode != null and otcCode !=''">
  				and (a.otc_code = #{otcCode} or #{otcCode} is null)
      		</if>							
    	)							
  		) x ,t_agentinfo y							
  		where 1=1
  		<if test="developer != null and developer !=''">
			and x.developer like concat('%', #{developer}, '%')
		</if> 						
    	and x.developer = y.agent_no) bb
		group by bb.developer )aa
	</select>
	
	<select id="commissionQueryAllCollect" parameterType="map" resultType="com.cbice.distribute.core.db.model.THisOtcrealtime">
	select sum(bb.cjsl) as cjsl,sum(cjje) as cjje,sum(fare0) as fare0,sum(current_amount) as current_amount,max(bb.developer) as developer,max(agent_name) as agent_name from (
		select x.*,y.agent_name from ( 
		select * from 
		( 
				select c.otc_code as otc_code,c.client_id, e.client_name, c.cjsl, c.cjje, f.fare0,i.current_amount,h.developer	from (
						select a.otc_code,a.client_id,a.otc_account, sum(a.business_amount) cjsl, sum(a.business_balance) cjje from t_his_otcrealtime a 
							where a.otc_prop &lt;&gt; '0C2'							
		                	and a.real_status = '0'		
		                	<if test="initDateStart != null and initDateStart !=''">
 	 							and to_date(to_char(a.init_date,'99999999'),'yyyyMMdd') &gt;= #{initDateStart}
      						</if> 
      						<if test="initDateEnd != null and initDateEnd !=''">
 	 							and to_date(to_char(a.init_date,'99999999'),'yyyyMMdd') &lt;= #{initDateEnd}
      						</if>
      						<if test="clientId != null and clientId !=''">
  								and (a.client_id = #{clientId} or #{clientId} is null)
      						</if>		
      						<if test="otcCode != null and otcCode !=''">
  								and (a.otc_code = #{otcCode} or #{otcCode} is null)
      						</if>									
		                	group by a.otc_code,a.client_id,a.otc_account) c,							
      			t_client e,													
           (select g.otc_code,g.client_id, sum(g.fare0) fare0	from t_his_otcdeliver g							
             			where g.business_flag in ('35018', '35017')							
                  			<if test="initDateStart != null and initDateStart !=''">
 	 							and to_date(to_char(g.init_date,'99999999'),'yyyyMMdd') &gt;= #{initDateStart}
      						</if> 
      						<if test="initDateEnd != null and initDateEnd !=''">
 	 							and to_date(to_char(g.init_date,'99999999'),'yyyyMMdd') &lt;= #{initDateEnd}
      						</if>							
             			group by g.otc_code,g.client_id) f,								
           (select cl.client_id,cl.developer from t_clientinfo cl union select o.client_id,o.developer from t_organinfo o ) h,							
            t_sdcostock i							
     			where c.client_id = e.client_id						
       			and c.client_id = f.client_id							
       			and c.otc_code  = f.otc_code						
       			and c.client_id = h.client_id							
       			and c.otc_account = i.sdc_account							
       			and c.otc_code    = i.sdc_code							
    	) nm							
    		union							
    	(							
    	select a.otc_code as otc_code,a.client_id,(select client_name from t_client b where b.client_id = a.client_id) as client_name,	0 as cjsl, 0 as cjje, 0 as fare0, current_amount,							
				(select developer from 							
      				(select cl.client_id,cl.developer from t_clientinfo cl union select o.client_id,o.developer from t_organinfo o) h 							
      				where h.client_id = a.client_id) as developer     							
     		from  t_otcstock a							
    		where   not exists (
    						select client_id from t_his_otcrealtime b							
                  	where b.client_id = a.client_id							
                    and b.otc_code = a.otc_code							
                    and b.otc_prop &lt;&gt; '0C2'							
                    and b.real_status = '0'							
         			<if test="initDateStart != null and initDateStart !=''">
 	 					and to_date(to_char(b.init_date,'99999999'),'yyyyMMdd') &gt;= #{initDateStart}
      				</if> 
      				<if test="initDateEnd != null and initDateEnd !=''">
 	 					and to_date(to_char(b.init_date,'99999999'),'yyyyMMdd') &lt;= #{initDateEnd}
      				</if>					
             		) 							
        	<if test="clientId != null and clientId !=''">
  				and (a.client_id = #{clientId} or #{clientId} is null)
      		</if>		
      		<if test="otcCode != null and otcCode !=''">
  				and (a.otc_code = #{otcCode} or #{otcCode} is null)
      		</if>							
    	)							
  		) x ,t_agentinfo y							
  		where 1=1
  		<if test="developer != null and developer !=''">
			and x.developer like concat('%', #{developer}, '%')
		</if> 						
    	and x.developer = y.agent_no) bb
		group by bb.developer
						
	</select>
	
	<select id="CommissionQuery" parameterType="map" resultType="java.util.HashMap">
		select a.otc_code ,a.client_id , a.client_name, a.cjsl, a.cjje, a.fare0,a.current_amount,a.developer,a.nature_date from t_commission a
		where 
		<if test="developer2 != null and developer2 !=''">
			(
		</if>
		a.developer like concat('%', #{developer1}, '%')
		<if test="developer2 != null and developer2 !=''">
			or a.developer = #{developer2} or a.developer = #{developer3})
		</if> 	
		<if test="developer != null and developer !=''">
			and a.developer like concat('%', #{developer}, '%')
		</if> 	
		<if test="initDateStart != null and initDateStart !=''">
 	 		and a.nature_date &gt;= #{initDateStart}
      	</if> 
      	<if test="initDateEnd != null and initDateEnd !=''">
 	 		and a.nature_date &lt;= #{initDateEnd}
      	</if>
      	<if test="clientId != null and clientId !=''">
  			and (a.client_id = #{clientId} or #{clientId} is null)
      	</if>		
      	<if test="otcCode != null and otcCode !=''">
  			and (a.otc_code = #{otcCode} or #{otcCode} is null)
      	</if>	
      	 order by a.developer ,a.otc_code ,	a.nature_date					
		limit #{limit} offset #{offset}  					
	</select>
	
	
	<select id="CommissionQuerySum" parameterType="map" resultType="java.util.HashMap">
		select a.otc_code , sum(a.cjsl) as cjsl, sum(a.cjje) as cjje, sum(a.fare0) as fare0,sum(a.current_amount) as current_amount,a.developer,a.nature_date from t_commission a
		where 
		<if test="developer2 != null and developer2 !=''">
			(
		</if>
		a.developer like concat('%', #{developer1}, '%')
		<if test="developer2 != null and developer2 !=''">
			or a.developer = #{developer2} or a.developer = #{developer3})
		</if> 
		<if test="developer != null and developer !=''">
			and a.developer like concat('%', #{developer}, '%')
		</if> 		
		<if test="initDateStart != null and initDateStart !=''">
 	 		and a.nature_date &gt;= #{initDateStart}
      	</if> 
      	<if test="initDateEnd != null and initDateEnd !=''">
 	 		and a.nature_date &lt;= #{initDateEnd}
      	</if>
      	<if test="clientId != null and clientId !=''">
  			and (a.client_id = #{clientId} or #{clientId} is null)
      	</if>		
      	<if test="otcCode != null and otcCode !=''">
  			and (a.otc_code = #{otcCode} or #{otcCode} is null) 
      	</if>
      	group by a.developer,a.otc_code ,a.nature_date order by a.developer ,a.otc_code  							
		limit #{limit} offset #{offset}  					
	</select>
	
	<select id="queryMaxdate" resultType="int">
		select max(nature_date)  from t_commission
	</select>
	
	
	<select id="countSelectBy" parameterType="map" resultType="int">
	select count (1) from (
		select a.otc_code ,a.client_id , a.client_name, a.cjsl, a.cjje, a.fare0,a.current_amount,a.developer,a.nature_date from t_commission a
		where 
		<if test="developer2 != null and developer2 !=''">
			(
		</if>
		a.developer like concat('%', #{developer1}, '%')
		<if test="developer2 != null and developer2 !=''">
			or a.developer = #{developer2} or a.developer = #{developer3})
		</if> 	
		<if test="developer != null and developer !=''">
			and a.developer like concat('%', #{developer}, '%')
		</if> 	
		<if test="initDateStart != null and initDateStart !=''">
 	 		and a.nature_date &gt;= #{initDateStart}
      	</if> 
      	<if test="initDateEnd != null and initDateEnd !=''">
 	 		and a.nature_date &lt;= #{initDateEnd}
      	</if>
      	<if test="clientId != null and clientId !=''">
  			and (a.client_id = #{clientId} or #{clientId} is null)
      	</if>		
      	<if test="otcCode != null and otcCode !=''">
  			and (a.otc_code = #{otcCode} or #{otcCode} is null)
      	</if>	
      	order by a.developer ,a.otc_code	
	 )aa
	</select>
	
	<select id="countSelectBySum" parameterType="map" resultType="int">
	select count (1) from (
		select a.otc_code , sum(a.cjsl) as cjsl, sum(a.cjje) as cjje, sum(a.fare0) as fare0,sum(a.current_amount) as current_amount,a.developer,a.nature_date from t_commission a
		where 
		<if test="developer2 != null and developer2 !=''">
			(
		</if>
		a.developer like concat('%', #{developer1}, '%')
		<if test="developer2 != null and developer2 !=''">
			or a.developer = #{developer2} or a.developer = #{developer3})
		</if> 
		<if test="developer != null and developer !=''">
			and a.developer like concat('%', #{developer}, '%')
		</if> 		
		<if test="initDateStart != null and initDateStart !=''">
 	 		and a.nature_date &gt;= #{initDateStart}
      	</if> 
      	<if test="initDateEnd != null and initDateEnd !=''">
 	 		and a.nature_date &lt;= #{initDateEnd}
      	</if>
      	<if test="clientId != null and clientId !=''">
  			and (a.client_id = #{clientId} or #{clientId} is null)
      	</if>		
      	<if test="otcCode != null and otcCode !=''">
  			and (a.otc_code = #{otcCode} or #{otcCode} is null) 
      	</if>
      	group by a.developer,a.otc_code,a.nature_date  order by a.developer ,a.otc_code 
	 )aa
	</select>
	
	<select id="commissionQueryAll" parameterType="map" resultType="com.cbice.distribute.core.db.model.THisOtcrealtime">
			select a.otc_code ,a.client_id , a.client_name, a.cjsl, a.cjje, a.fare0,a.current_amount,a.developer,a.nature_date from t_commission a
		where 
		<if test="developer2 != null and developer2 !=''">
			(
		</if>
		a.developer like concat('%', #{developer1}, '%')
		<if test="developer2 != null and developer2 !=''">
			or a.developer = #{developer2} or a.developer = #{developer3})
		</if> 
		<if test="developer != null and developer !=''">
			and a.developer like concat('%', #{developer}, '%')
		</if> 		
		<if test="initDateStart != null and initDateStart !=''">
 	 		and a.nature_date &gt;= #{initDateStart}
      	</if> 
      	<if test="initDateEnd != null and initDateEnd !=''">
 	 		and a.nature_date &lt;= #{initDateEnd}
      	</if>
      	<if test="clientId != null and clientId !=''">
  			and (a.client_id = #{clientId} or #{clientId} is null)
      	</if>		
      	<if test="otcCode != null and otcCode !=''">
  			and (a.otc_code = #{otcCode} or #{otcCode} is null)
      	</if>	
			order by a.developer ,a.otc_code				
	</select>
	
	
	<select id="commissionQueryAllSum" parameterType="map" resultType="com.cbice.distribute.core.db.model.THisOtcrealtime">
			select a.otc_code , sum(a.cjsl) as cjsl, sum(a.cjje) as cjje, sum(a.fare0) as fare0,sum(a.current_amount) as current_amount,a.developer,a.nature_date from t_commission a
		where 
		<if test="developer2 != null and developer2 !=''">
			(
		</if>
		a.developer like concat('%', #{developer1}, '%')
		<if test="developer2 != null and developer2 !=''">
			or a.developer = #{developer2} or a.developer = #{developer3})
		</if> 
		<if test="developer != null and developer !=''">
			and a.developer like concat('%', #{developer}, '%')
		</if> 		
		<if test="initDateStart != null and initDateStart !=''">
 	 		and a.nature_date &gt;= #{initDateStart}
      	</if> 
      	<if test="initDateEnd != null and initDateEnd !=''">
 	 		and a.nature_date &lt;= #{initDateEnd}
      	</if>
      	<if test="clientId != null and clientId !=''">
  			and (a.client_id = #{clientId} or #{clientId} is null)
      	</if>		
      	<if test="otcCode != null and otcCode !=''">
  			and (a.otc_code = #{otcCode} or #{otcCode} is null)
      	</if>	
		group by a.developer ,a.otc_code,a.nature_date	order by a.developer ,a.otc_code				
	</select>
	
	
  
</mapper>