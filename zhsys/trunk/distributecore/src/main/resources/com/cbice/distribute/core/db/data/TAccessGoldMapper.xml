<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cbice.distribute.core.db.data.TAccessGoldMapper" >
  <resultMap id="BaseResultMap" type="com.cbice.distribute.core.db.model.TAccessGold" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 15 15:50:34 CST 2015.
    -->
    <result column="developer" property="developer" jdbcType="VARCHAR" />
    <result column="client_id" property="clientId" jdbcType="VARCHAR" />
    <result column="client_name" property="clientName" jdbcType="VARCHAR" />
    <result column="in_balance" property="inBalance" jdbcType="DOUBLE" />
    <result column="out_balance" property="outBalance" jdbcType="DOUBLE" />
    <result column="diff_balance" property="diffBalance" jdbcType="DOUBLE" />
    <result column="current_balance" property="currentBalance" jdbcType="DOUBLE" />
    <result column="nature_date" property="natureDate" jdbcType="BIGINT" />
    <result column="prepare1" property="prepare1" jdbcType="VARCHAR" />
    <result column="prepare2" property="prepare2" jdbcType="VARCHAR" />
    <result column="prepare3" property="prepare3" jdbcType="VARCHAR" />
    <result column="prepare4" property="prepare4" jdbcType="VARCHAR" />
    <result column="prepare5" property="prepare5" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 15 15:50:34 CST 2015.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 15 15:50:34 CST 2015.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 15 15:50:34 CST 2015.
    -->
    developer, client_id, client_name, in_balance, out_balance, diff_balance, current_balance, 
    nature_date, prepare1, prepare2, prepare3, prepare4, prepare5
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cbice.distribute.core.db.model.TAccessGoldExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 15 15:50:34 CST 2015.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_access_gold
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.cbice.distribute.core.db.model.TAccessGoldExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 15 15:50:34 CST 2015.
    -->
    delete from t_access_gold
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cbice.distribute.core.db.model.TAccessGold" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 15 15:50:34 CST 2015.
    -->
    insert into t_access_gold (developer, client_id, client_name, 
      in_balance, out_balance, diff_balance, 
      current_balance, nature_date, prepare1, 
      prepare2, prepare3, prepare4, 
      prepare5)
    values (#{developer,jdbcType=VARCHAR}, #{clientId,jdbcType=VARCHAR}, #{clientName,jdbcType=VARCHAR}, 
      #{inBalance,jdbcType=DOUBLE}, #{outBalance,jdbcType=DOUBLE}, #{diffBalance,jdbcType=DOUBLE}, 
      #{currentBalance,jdbcType=DOUBLE}, #{natureDate,jdbcType=BIGINT}, #{prepare1,jdbcType=VARCHAR}, 
      #{prepare2,jdbcType=VARCHAR}, #{prepare3,jdbcType=VARCHAR}, #{prepare4,jdbcType=VARCHAR}, 
      #{prepare5,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cbice.distribute.core.db.model.TAccessGold" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 15 15:50:34 CST 2015.
    -->
    insert into t_access_gold
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="developer != null" >
        developer,
      </if>
      <if test="clientId != null" >
        client_id,
      </if>
      <if test="clientName != null" >
        client_name,
      </if>
      <if test="inBalance != null" >
        in_balance,
      </if>
      <if test="outBalance != null" >
        out_balance,
      </if>
      <if test="diffBalance != null" >
        diff_balance,
      </if>
      <if test="currentBalance != null" >
        current_balance,
      </if>
      <if test="natureDate != null" >
        nature_date,
      </if>
      <if test="prepare1 != null" >
        prepare1,
      </if>
      <if test="prepare2 != null" >
        prepare2,
      </if>
      <if test="prepare3 != null" >
        prepare3,
      </if>
      <if test="prepare4 != null" >
        prepare4,
      </if>
      <if test="prepare5 != null" >
        prepare5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="developer != null" >
        #{developer,jdbcType=VARCHAR},
      </if>
      <if test="clientId != null" >
        #{clientId,jdbcType=VARCHAR},
      </if>
      <if test="clientName != null" >
        #{clientName,jdbcType=VARCHAR},
      </if>
      <if test="inBalance != null" >
        #{inBalance,jdbcType=DOUBLE},
      </if>
      <if test="outBalance != null" >
        #{outBalance,jdbcType=DOUBLE},
      </if>
      <if test="diffBalance != null" >
        #{diffBalance,jdbcType=DOUBLE},
      </if>
      <if test="currentBalance != null" >
        #{currentBalance,jdbcType=DOUBLE},
      </if>
      <if test="natureDate != null" >
        #{natureDate,jdbcType=BIGINT},
      </if>
      <if test="prepare1 != null" >
        #{prepare1,jdbcType=VARCHAR},
      </if>
      <if test="prepare2 != null" >
        #{prepare2,jdbcType=VARCHAR},
      </if>
      <if test="prepare3 != null" >
        #{prepare3,jdbcType=VARCHAR},
      </if>
      <if test="prepare4 != null" >
        #{prepare4,jdbcType=VARCHAR},
      </if>
      <if test="prepare5 != null" >
        #{prepare5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cbice.distribute.core.db.model.TAccessGoldExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 15 15:50:34 CST 2015.
    -->
    select count(*) from t_access_gold
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 15 15:50:34 CST 2015.
    -->
    update t_access_gold
    <set >
      <if test="record.developer != null" >
        developer = #{record.developer,jdbcType=VARCHAR},
      </if>
      <if test="record.clientId != null" >
        client_id = #{record.clientId,jdbcType=VARCHAR},
      </if>
      <if test="record.clientName != null" >
        client_name = #{record.clientName,jdbcType=VARCHAR},
      </if>
      <if test="record.inBalance != null" >
        in_balance = #{record.inBalance,jdbcType=DOUBLE},
      </if>
      <if test="record.outBalance != null" >
        out_balance = #{record.outBalance,jdbcType=DOUBLE},
      </if>
      <if test="record.diffBalance != null" >
        diff_balance = #{record.diffBalance,jdbcType=DOUBLE},
      </if>
      <if test="record.currentBalance != null" >
        current_balance = #{record.currentBalance,jdbcType=DOUBLE},
      </if>
      <if test="record.natureDate != null" >
        nature_date = #{record.natureDate,jdbcType=BIGINT},
      </if>
      <if test="record.prepare1 != null" >
        prepare1 = #{record.prepare1,jdbcType=VARCHAR},
      </if>
      <if test="record.prepare2 != null" >
        prepare2 = #{record.prepare2,jdbcType=VARCHAR},
      </if>
      <if test="record.prepare3 != null" >
        prepare3 = #{record.prepare3,jdbcType=VARCHAR},
      </if>
      <if test="record.prepare4 != null" >
        prepare4 = #{record.prepare4,jdbcType=VARCHAR},
      </if>
      <if test="record.prepare5 != null" >
        prepare5 = #{record.prepare5,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 15 15:50:34 CST 2015.
    -->
    update t_access_gold
    set developer = #{record.developer,jdbcType=VARCHAR},
      client_id = #{record.clientId,jdbcType=VARCHAR},
      client_name = #{record.clientName,jdbcType=VARCHAR},
      in_balance = #{record.inBalance,jdbcType=DOUBLE},
      out_balance = #{record.outBalance,jdbcType=DOUBLE},
      diff_balance = #{record.diffBalance,jdbcType=DOUBLE},
      current_balance = #{record.currentBalance,jdbcType=DOUBLE},
      nature_date = #{record.natureDate,jdbcType=BIGINT},
      prepare1 = #{record.prepare1,jdbcType=VARCHAR},
      prepare2 = #{record.prepare2,jdbcType=VARCHAR},
      prepare3 = #{record.prepare3,jdbcType=VARCHAR},
      prepare4 = #{record.prepare4,jdbcType=VARCHAR},
      prepare5 = #{record.prepare5,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <select id="selectAccessGold" parameterType="map" resultType="java.util.HashMap">
  select a.developer,a.client_id,a.client_name,a.in_balance,a.out_balance,a.diff_balance,a.current_balance,a.nature_date from t_access_gold a 
	  where 
	  <if test="developer2 != null and developer2 !=''">
			(
		</if>
	  a.developer like concat('%', #{developer1}, '%')
	  <if test="developer2 != null and developer2 !=''">
			or a.developer = #{developer2} or a.developer = #{developer3})
		</if> 
	  <if test="developer != null and developer !=''">
				and a.developer like concat('%', #{developer}, '%')
		</if> 	
		<if test="initDateStart != null and initDateStart !=''">
	 	 		and a.nature_date &gt;= #{initDateStart}
	  </if> 
	  <if test="initDateEnd != null and initDateEnd !=''">
	 	 		and a.nature_date &lt;= #{initDateEnd}
	  </if>
	  <if test="clientId != null and clientId !=''">
	  		and (a.client_id = #{clientId} or #{clientId} is null)
	  </if>		
	  order by a.developer ,a.client_id				
		limit #{limit} offset #{offset} 
  </select>
  
  <select id="selectAccessGoldSum" parameterType="map" resultType="java.util.HashMap">
  select a.developer,sum(a.in_balance) as in_balance,sum(a.out_balance) as out_balance,sum(a.diff_balance) as diff_balance,sum(a.current_balance) as current_balance,a.nature_date from t_access_gold a 
	  where 
	  <if test="developer2 != null and developer2 !=''">
			(
		</if>
	  a.developer like concat('%', #{developer1}, '%')
	  <if test="developer2 != null and developer2 !=''">
			or a.developer = #{developer2} or a.developer = #{developer3})
		</if> 
	  <if test="developer != null and developer !=''">
				and a.developer like concat('%', #{developer}, '%')
		</if> 	
		<if test="initDateStart != null and initDateStart !=''">
	 	 		and a.nature_date &gt;= #{initDateStart}
	  </if> 
	  <if test="initDateEnd != null and initDateEnd !=''">
	 	 		and a.nature_date &lt;= #{initDateEnd}
	  </if>
	  <if test="clientId != null and clientId !=''">
	  		and (a.client_id = #{clientId} or #{clientId} is null) 
	  </if>		
	  group by a.developer ,a.nature_date order by a.developer 			
		limit #{limit} offset #{offset} 
  </select>
  
  <select id="selectAccessGoldCount" parameterType="map" resultType="int">
	select count (1) from (
		select a.developer,a.client_id,a.client_name,a.in_balance,a.out_balance,a.diff_balance,a.current_balance,a.nature_date from t_access_gold a 
	  where 
	  <if test="developer2 != null and developer2 !=''">
			(
		</if>
	  a.developer like concat('%', #{developer1}, '%')
	  <if test="developer2 != null and developer2 !=''">
			or a.developer = #{developer2} or a.developer = #{developer3})
		</if> 
	  <if test="developer != null and developer !=''">
				and a.developer like concat('%', #{developer}, '%')
		</if> 	
		<if test="initDateStart != null and initDateStart !=''">
	 	 		and a.nature_date &gt;= #{initDateStart}
	  </if> 
	  <if test="initDateEnd != null and initDateEnd !=''">
	 	 		and a.nature_date &lt;= #{initDateEnd}
	  </if>
	  <if test="clientId != null and clientId !=''">
	  		and (a.client_id = #{clientId} or #{clientId} is null)
	  </if>		
	)aa
	</select>
	
	<select id="selectAccessGoldCountSum" parameterType="map" resultType="int">
	select count (1) from (
		select a.developer,sum(a.in_balance) as in_balance,sum(a.out_balance) as out_balance,sum(a.diff_balance) as diff_balance,sum(a.current_balance) as current_balance,a.nature_date from t_access_gold a 
	  where 
	  <if test="developer2 != null and developer2 !=''">
			(
		</if>
	  a.developer like concat('%', #{developer1}, '%')
	  <if test="developer2 != null and developer2 !=''">
			or a.developer = #{developer2} or a.developer = #{developer3})
		</if> 
	  <if test="developer != null and developer !=''">
				and a.developer like concat('%', #{developer}, '%')
		</if> 	
		<if test="initDateStart != null and initDateStart !=''">
	 	 		and a.nature_date &gt;= #{initDateStart}
	  </if> 
	  <if test="initDateEnd != null and initDateEnd !=''">
	 	 		and a.nature_date &lt;= #{initDateEnd}
	  </if>
	  group by a.developer,a.nature_date order by a.developer 
	)aa
	</select>
	
	<select id="selectAccessGoldAll" parameterType="map" resultType="com.cbice.distribute.core.db.model.TAccessGold">
		select a.developer,a.client_id,a.client_name,a.in_balance,a.out_balance,a.diff_balance,a.current_balance,a.nature_date from t_access_gold a 
	  where 
	  <if test="developer2 != null and developer2 !=''">
			(
		</if>
	  a.developer like concat('%', #{developer1}, '%')
	  <if test="developer2 != null and developer2 !=''">
			or a.developer = #{developer2} or a.developer = #{developer3})
		</if> 
	  <if test="developer != null and developer !=''">
				and a.developer like concat('%', #{developer}, '%')
		</if> 	
		<if test="initDateStart != null and initDateStart !=''">
	 	 		and a.nature_date &gt;= #{initDateStart}
	  </if> 
	  <if test="initDateEnd != null and initDateEnd !=''">
	 	 		and a.nature_date &lt;= #{initDateEnd}
	  </if>
	  <if test="clientId != null and clientId !=''">
	  		and (a.client_id = #{clientId} or #{clientId} is null)
	  </if>	
	  order by a.developer ,a.client_id		
	</select>
  
    <select id="selectAccessGoldAllSum" parameterType="map" resultType="com.cbice.distribute.core.db.model.TAccessGold">
		select a.developer,sum(a.in_balance) as in_balance,sum(a.out_balance) as out_balance,sum(a.diff_balance) as diff_balance,sum(a.current_balance) as current_balance,a.nature_date from t_access_gold a 
	  where 
	  <if test="developer2 != null and developer2 !=''">
			(
		</if>
	  a.developer like concat('%', #{developer1}, '%')
	  <if test="developer2 != null and developer2 !=''">
			or a.developer = #{developer2} or a.developer = #{developer3})
		</if> 
	  <if test="developer != null and developer !=''">
				and a.developer like concat('%', #{developer}, '%')
		</if> 	
		<if test="initDateStart != null and initDateStart !=''">
	 	 		and a.nature_date &gt;= #{initDateStart}
	  </if> 
	  <if test="initDateEnd != null and initDateEnd !=''">
	 	 		and a.nature_date &lt;= #{initDateEnd}
	  </if>
	  group by a.developer,a.nature_date order by a.developer 
	</select>
	
	<select id="queryMaxDate" resultType="int">
		select max(nature_date) from t_access_gold
	</select>
  
</mapper>