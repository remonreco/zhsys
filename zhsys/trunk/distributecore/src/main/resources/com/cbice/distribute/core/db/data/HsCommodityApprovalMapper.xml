<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cbice.distribute.core.db.data.HsCommodityApprovalMapper">
  <resultMap id="BaseResultMap" type="com.cbice.distribute.core.db.model.HsCommodityApproval">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 19 13:52:36 CST 2015.
    -->
    <result column="sys_id" jdbcType="VARCHAR" property="sysId" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="customer_id" jdbcType="BIGINT" property="customerId" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="exchange_id" jdbcType="BIGINT" property="exchangeId" />
    <result column="exchange_name" jdbcType="VARCHAR" property="exchangeName" />
    <result column="exchange_num" jdbcType="BIGINT" property="exchangeNum" />
    <result column="exchange_use_id" jdbcType="BIGINT" property="exchangeUseId" />
    <result column="exchange_use_name" jdbcType="VARCHAR" property="exchangeUseName" />
    <result column="use_num" jdbcType="BIGINT" property="useNum" />
    <result column="hold_num" jdbcType="BIGINT" property="holdNum" />
    <result column="approval_time" jdbcType="TIMESTAMP" property="approvalTime" />
    <result column="approval_result" jdbcType="SMALLINT" property="approvalResult" />
    <result column="rights_account" jdbcType="VARCHAR" property="rightsAccount" />
    <result column="product_code" jdbcType="BIGINT" property="productCode" />
    <result column="stock_market" jdbcType="VARCHAR" property="stockMarket" />
    <result column="no_currency_num" jdbcType="VARCHAR" property="noCurrencyNum" />
    <result column="handle_class" jdbcType="VARCHAR" property="handleClass" />
    <result column="backup1" jdbcType="CHAR" property="backup1" />
    <result column="backup2" jdbcType="CHAR" property="backup2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 19 13:52:36 CST 2015.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 19 13:52:36 CST 2015.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 19 13:52:36 CST 2015.
    -->
    sys_id, order_id, customer_id, customer_name, exchange_id, exchange_name, exchange_num, 
    exchange_use_id, exchange_use_name, use_num, hold_num, approval_time, approval_result, 
    rights_account, product_code, stock_market, no_currency_num, handle_class, backup1, 
    backup2
  </sql>
  <select id="selectByExample" parameterType="com.cbice.distribute.core.db.model.HsCommodityApprovalExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 19 13:52:36 CST 2015.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hs_commodity_approval
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.cbice.distribute.core.db.model.HsCommodityApprovalExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 19 13:52:36 CST 2015.
    -->
    delete from hs_commodity_approval
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cbice.distribute.core.db.model.HsCommodityApproval">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 19 13:52:36 CST 2015.
    -->
    insert into hs_commodity_approval (sys_id, order_id, customer_id, 
      customer_name, exchange_id, exchange_name, 
      exchange_num, exchange_use_id, exchange_use_name, 
      use_num, hold_num, approval_time, 
      approval_result, rights_account, product_code, 
      stock_market, no_currency_num, handle_class, 
      backup1, backup2)
    values (#{sysId,jdbcType=VARCHAR}, #{orderId,jdbcType=BIGINT}, #{customerId,jdbcType=BIGINT}, 
      #{customerName,jdbcType=VARCHAR}, #{exchangeId,jdbcType=BIGINT}, #{exchangeName,jdbcType=VARCHAR}, 
      #{exchangeNum,jdbcType=BIGINT}, #{exchangeUseId,jdbcType=BIGINT}, #{exchangeUseName,jdbcType=VARCHAR}, 
      #{useNum,jdbcType=BIGINT}, #{holdNum,jdbcType=BIGINT}, #{approvalTime,jdbcType=TIMESTAMP}, 
      #{approvalResult,jdbcType=SMALLINT}, #{rightsAccount,jdbcType=VARCHAR}, #{productCode,jdbcType=BIGINT}, 
      #{stockMarket,jdbcType=VARCHAR}, #{noCurrencyNum,jdbcType=VARCHAR}, #{handleClass,jdbcType=VARCHAR}, 
      #{backup1,jdbcType=CHAR}, #{backup2,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cbice.distribute.core.db.model.HsCommodityApproval">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 19 13:52:36 CST 2015.
    -->
    insert into hs_commodity_approval
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sysId != null">
        sys_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="customerName != null">
        customer_name,
      </if>
      <if test="exchangeId != null">
        exchange_id,
      </if>
      <if test="exchangeName != null">
        exchange_name,
      </if>
      <if test="exchangeNum != null">
        exchange_num,
      </if>
      <if test="exchangeUseId != null">
        exchange_use_id,
      </if>
      <if test="exchangeUseName != null">
        exchange_use_name,
      </if>
      <if test="useNum != null">
        use_num,
      </if>
      <if test="holdNum != null">
        hold_num,
      </if>
      <if test="approvalTime != null">
        approval_time,
      </if>
      <if test="approvalResult != null">
        approval_result,
      </if>
      <if test="rightsAccount != null">
        rights_account,
      </if>
      <if test="productCode != null">
        product_code,
      </if>
      <if test="stockMarket != null">
        stock_market,
      </if>
      <if test="noCurrencyNum != null">
        no_currency_num,
      </if>
      <if test="handleClass != null">
        handle_class,
      </if>
      <if test="backup1 != null">
        backup1,
      </if>
      <if test="backup2 != null">
        backup2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sysId != null">
        #{sysId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=BIGINT},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="exchangeId != null">
        #{exchangeId,jdbcType=BIGINT},
      </if>
      <if test="exchangeName != null">
        #{exchangeName,jdbcType=VARCHAR},
      </if>
      <if test="exchangeNum != null">
        #{exchangeNum,jdbcType=BIGINT},
      </if>
      <if test="exchangeUseId != null">
        #{exchangeUseId,jdbcType=BIGINT},
      </if>
      <if test="exchangeUseName != null">
        #{exchangeUseName,jdbcType=VARCHAR},
      </if>
      <if test="useNum != null">
        #{useNum,jdbcType=BIGINT},
      </if>
      <if test="holdNum != null">
        #{holdNum,jdbcType=BIGINT},
      </if>
      <if test="approvalTime != null">
        #{approvalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="approvalResult != null">
        #{approvalResult,jdbcType=SMALLINT},
      </if>
      <if test="rightsAccount != null">
        #{rightsAccount,jdbcType=VARCHAR},
      </if>
      <if test="productCode != null">
        #{productCode,jdbcType=BIGINT},
      </if>
      <if test="stockMarket != null">
        #{stockMarket,jdbcType=VARCHAR},
      </if>
      <if test="noCurrencyNum != null">
        #{noCurrencyNum,jdbcType=VARCHAR},
      </if>
      <if test="handleClass != null">
        #{handleClass,jdbcType=VARCHAR},
      </if>
      <if test="backup1 != null">
        #{backup1,jdbcType=CHAR},
      </if>
      <if test="backup2 != null">
        #{backup2,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cbice.distribute.core.db.model.HsCommodityApprovalExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 19 13:52:36 CST 2015.
    -->
    select count(*) from hs_commodity_approval
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 19 13:52:36 CST 2015.
    -->
    update hs_commodity_approval
    <set>
      <if test="record.sysId != null">
        sys_id = #{record.sysId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=BIGINT},
      </if>
      <if test="record.customerName != null">
        customer_name = #{record.customerName,jdbcType=VARCHAR},
      </if>
      <if test="record.exchangeId != null">
        exchange_id = #{record.exchangeId,jdbcType=BIGINT},
      </if>
      <if test="record.exchangeName != null">
        exchange_name = #{record.exchangeName,jdbcType=VARCHAR},
      </if>
      <if test="record.exchangeNum != null">
        exchange_num = #{record.exchangeNum,jdbcType=BIGINT},
      </if>
      <if test="record.exchangeUseId != null">
        exchange_use_id = #{record.exchangeUseId,jdbcType=BIGINT},
      </if>
      <if test="record.exchangeUseName != null">
        exchange_use_name = #{record.exchangeUseName,jdbcType=VARCHAR},
      </if>
      <if test="record.useNum != null">
        use_num = #{record.useNum,jdbcType=BIGINT},
      </if>
      <if test="record.holdNum != null">
        hold_num = #{record.holdNum,jdbcType=BIGINT},
      </if>
      <if test="record.approvalTime != null">
        approval_time = #{record.approvalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.approvalResult != null">
        approval_result = #{record.approvalResult,jdbcType=SMALLINT},
      </if>
      <if test="record.rightsAccount != null">
        rights_account = #{record.rightsAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.productCode != null">
        product_code = #{record.productCode,jdbcType=BIGINT},
      </if>
      <if test="record.stockMarket != null">
        stock_market = #{record.stockMarket,jdbcType=VARCHAR},
      </if>
      <if test="record.noCurrencyNum != null">
        no_currency_num = #{record.noCurrencyNum,jdbcType=VARCHAR},
      </if>
      <if test="record.handleClass != null">
        handle_class = #{record.handleClass,jdbcType=VARCHAR},
      </if>
      <if test="record.backup1 != null">
        backup1 = #{record.backup1,jdbcType=CHAR},
      </if>
      <if test="record.backup2 != null">
        backup2 = #{record.backup2,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 19 13:52:36 CST 2015.
    -->
    update hs_commodity_approval
    set sys_id = #{record.sysId,jdbcType=VARCHAR},
      order_id = #{record.orderId,jdbcType=BIGINT},
      customer_id = #{record.customerId,jdbcType=BIGINT},
      customer_name = #{record.customerName,jdbcType=VARCHAR},
      exchange_id = #{record.exchangeId,jdbcType=BIGINT},
      exchange_name = #{record.exchangeName,jdbcType=VARCHAR},
      exchange_num = #{record.exchangeNum,jdbcType=BIGINT},
      exchange_use_id = #{record.exchangeUseId,jdbcType=BIGINT},
      exchange_use_name = #{record.exchangeUseName,jdbcType=VARCHAR},
      use_num = #{record.useNum,jdbcType=BIGINT},
      hold_num = #{record.holdNum,jdbcType=BIGINT},
      approval_time = #{record.approvalTime,jdbcType=TIMESTAMP},
      approval_result = #{record.approvalResult,jdbcType=SMALLINT},
      rights_account = #{record.rightsAccount,jdbcType=VARCHAR},
      product_code = #{record.productCode,jdbcType=BIGINT},
      stock_market = #{record.stockMarket,jdbcType=VARCHAR},
      no_currency_num = #{record.noCurrencyNum,jdbcType=VARCHAR},
      handle_class = #{record.handleClass,jdbcType=VARCHAR},
      backup1 = #{record.backup1,jdbcType=CHAR},
      backup2 = #{record.backup2,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <select id="commodityApprovalQuery" parameterType="map" resultType="java.util.HashMap">
  		select customer_name, exchange_name, exchange_num, exchange_use_name,   use_num,  hold_num  , approval_time , approval_result 
		from hs_commodity_approval	where sys_id = #{sysId}
		<if test="customerName != null and customerName !=''">
			 and customer_name like concat(concat('%', #{customerName}), '%')
		</if>
		<if test="exchangeName != null and exchangeName !=''">
			 and exchange_name like concat(concat('%', #{exchangeName}), '%')
		</if>
		<if test="approvalTimeStart != null and approvalTimeStart !=''">
 	 		 and approval_time &gt;= #{approvalTimeStart}
      	</if> 
      	<if test="approvalTimeEnd != null and approvalTimeEnd !=''">
 	 		 and approval_time &lt;= #{approvalTimeEnd}
      	</if>
      	order by approval_time DESC
      	limit #{limit} offset #{offset} 
  </select>
  
  <select id="countCommodityApprovalQuery" parameterType="map" resultType="int">
  	select count(1) from(
  		select customer_name, exchange_name, exchange_num, exchange_use_name,   use_num,  hold_num  , approval_time , approval_result 
		from hs_commodity_approval	where sys_id = #{sysId}
		<if test="customerName != null and customerName !=''">
			 and customer_name like concat(concat('%', #{customerName}), '%')
		</if>
		<if test="exchangeName != null and exchangeName !=''">
			 and exchange_name like concat(concat('%', #{exchangeName}), '%')
		</if>
		<if test="approvalTimeStart != null and approvalTimeStart !=''">
 	 		 and approval_time &gt;= #{approvalTimeStart}
      	</if> 
      	<if test="approvalTimeEnd != null and approvalTimeEnd !=''">
 	 		 and approval_time &lt;= #{approvalTimeEnd}
      	</if>
  	)aa 
  </select>
  
  <select id="queryApprovalSuccess" parameterType="map" resultMap="BaseResultMap">
  		select stock_market, product_code, rights_account,sum(use_num) useNum, no_currency_num,  handle_class 
		from hs_commodity_approval	where sys_id = #{sysId}
		<if test="approvalResult != null and approvalResult !=''">
			 and approval_result = #{approvalResult}
		</if>
		<if test="approvalTimeStart != null and approvalTimeStart !=''">
 	 		 and approval_time &gt;= #{approvalTimeStart}
      	</if> 
      	<if test="approvalTimeEnd != null and approvalTimeEnd !=''">
 	 		 and approval_time &lt;= #{approvalTimeEnd}
      	</if>
      	group by rights_account,product_code,stock_market,no_currency_num,handle_class
      	order by rights_account DESC
  </select>
  
  <select id="queryApprovalSuccessEx" parameterType="map" resultMap="BaseResultMap">
		select ca.order_id ,ca.customer_name,ca.exchange_name,ca.exchange_num,eo.address,t.tel,array_to_string(ARRAY(SELECT unnest(array_agg(concat(eg.gift_name,':',eg.gift_num,c.sale_unit)))),',') gifts 
		from (((hs_commodity_approval ca join hs_exchange_order eo on ca.order_id=eo.id )  join t_user t on ca.customer_id=t.id) left join hs_exchange_gift eg on ca.order_id = eg.order_id) left join hs_commodity c on eg.gift_id=c.com_id 
        where  ca.sys_id = #{sysId} and ca.approval_result = #{approvalResult}
		<if test="approvalTimeStart != null and approvalTimeStart !=''">
 	 		 and ca.approval_time &gt;= #{approvalTimeStart}
      	</if> 
      	<if test="approvalTimeEnd != null and approvalTimeEnd !=''">
 	 		 and ca.approval_time &lt;= #{approvalTimeEnd}
      	</if>
 	    GROUP BY ca.order_id,ca.customer_name,ca.exchange_name,ca.exchange_num,eo.address,t.tel
 	    order by ca.customer_name DESC
  </select>
</mapper>